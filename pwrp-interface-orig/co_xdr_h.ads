pragma Ada_2005;
pragma Style_Checks (Off);

with Interfaces.C; use Interfaces.C;
limited with co_platform_h;
with pwr_h;
limited with rpc_xdr_h;
limited with co_cdh_h;
with rpc_types_h;
with pwr_class_h;
with Interfaces.C.Strings;

package co_xdr_h is

   --  unsupported macro: xdr_pwr_tFloat32 xdr_float
   --  unsupported macro: xdr_pwr_tFloat64 xdr_double
  --* 
  -- * Proview   Open Source Process Control.
  -- * Copyright (C) 2005-2014 SSAB EMEA AB.
  -- *
  -- * This file is part of Proview.
  -- *
  -- * This program is free software; you can redistribute it and/or 
  -- * modify it under the terms of the GNU General Public License as 
  -- * published by the Free Software Foundation, either version 2 of 
  -- * the License, or (at your option) any later version.
  -- *
  -- * This program is distributed in the hope that it will be useful 
  -- * but WITHOUT ANY WARRANTY; without even the implied warranty of 
  -- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
  -- * GNU General Public License for more details.
  -- *
  -- * You should have received a copy of the GNU General Public License 
  -- * along with Proview. If not, see <http://www.gnu.org/licenses/>
  -- *
  -- * Linking Proview statically or dynamically with other modules is
  -- * making a combined work based on Proview. Thus, the terms and 
  -- * conditions of the GNU General Public License cover the whole 
  -- * combination.
  -- *
  -- * In addition, as a special exception, the copyright holders of
  -- * Proview give you permission to, from the build function in the
  -- * Proview Configurator, combine Proview with modules generated by the
  -- * Proview PLC Editor to a PLC program, regardless of the license
  -- * terms of these modules. You may copy and distribute the resulting
  -- * combined work under the terms of your choice, provided that every 
  -- * copy of the combined work is accompanied by a complete copy of 
  -- * the source code of Proview (the version used to produce the 
  -- * combined work), being distributed under the terms of the GNU 
  -- * General Public License plus this exception.
  -- * 

  -- co_xdr.h -- xdr routines
  --   This module contains the XDR-routines for 
  --   PROVIEW's data types  

   function co_IsXdrNeeded (plat1 : access co_platform_h.co_sPlatform; plat2 : access co_platform_h.co_sPlatform) return pwr_h.pwr_tBoolean;  -- co_xdr.h:67
   pragma Import (C, co_IsXdrNeeded, "co_IsXdrNeeded");

   function xdr_cdh_sFamily (xdrs : access rpc_xdr_h.XDR; objp : access co_cdh_h.cdh_sFamily) return rpc_types_h.bool_t;  -- co_xdr.h:72
   pragma Import (C, xdr_cdh_sFamily, "xdr_cdh_sFamily");

   function xdr_cdh_sObjName (xdrs : access rpc_xdr_h.XDR; objp : access co_cdh_h.cdh_sObjName) return rpc_types_h.bool_t;  -- co_xdr.h:75
   pragma Import (C, xdr_cdh_sObjName, "xdr_cdh_sObjName");

   function xdr_co_sPlatform (xdrs : access rpc_xdr_h.XDR; objp : access co_platform_h.co_sPlatform) return rpc_types_h.bool_t;  -- co_xdr.h:78
   pragma Import (C, xdr_co_sPlatform, "xdr_co_sPlatform");

   function xdr_pwr_eType (xdrs : access rpc_xdr_h.XDR; objp : access pwr_class_h.pwr_eType) return rpc_types_h.bool_t;  -- co_xdr.h:81
   pragma Import (C, xdr_pwr_eType, "xdr_pwr_eType");

   function xdr_pwr_mAdef (xdrs : access rpc_xdr_h.XDR; objp : access pwr_class_h.pwr_mAdef) return rpc_types_h.bool_t;  -- co_xdr.h:84
   pragma Import (C, xdr_pwr_mAdef, "xdr_pwr_mAdef");

   function xdr_pwr_sClassDef (xdrs : access rpc_xdr_h.XDR; objp : access pwr_class_h.pwr_sClassDef) return rpc_types_h.bool_t;  -- co_xdr.h:87
   pragma Import (C, xdr_pwr_sClassDef, "xdr_pwr_sClassDef");

   function xdr_pwr_sObjBodyDef (xdrs : access rpc_xdr_h.XDR; objp : access pwr_class_h.pwr_sObjBodyDef) return rpc_types_h.bool_t;  -- co_xdr.h:90
   pragma Import (C, xdr_pwr_sObjBodyDef, "xdr_pwr_sObjBodyDef");

   function xdr_pwr_sParInfo (xdrs : access rpc_xdr_h.XDR; objp : access pwr_class_h.pwr_sParInfo) return rpc_types_h.bool_t;  -- co_xdr.h:93
   pragma Import (C, xdr_pwr_sParInfo, "xdr_pwr_sParInfo");

   function xdr_pwr_sParam (xdrs : access rpc_xdr_h.XDR; objp : access pwr_class_h.pwr_sParam) return rpc_types_h.bool_t;  -- co_xdr.h:96
   pragma Import (C, xdr_pwr_sParam, "xdr_pwr_sParam");

   function xdr_pwr_tAix (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tAix) return rpc_types_h.bool_t;  -- co_xdr.h:99
   pragma Import (C, xdr_pwr_tAix, "xdr_pwr_tAix");

   function xdr_pwr_tBit (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tBit) return rpc_types_h.bool_t;  -- co_xdr.h:102
   pragma Import (C, xdr_pwr_tBit, "xdr_pwr_tBit");

   function xdr_pwr_tBitMask (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tBitMask) return rpc_types_h.bool_t;  -- co_xdr.h:105
   pragma Import (C, xdr_pwr_tBitMask, "xdr_pwr_tBitMask");

   function xdr_pwr_tBoolean (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tBoolean) return rpc_types_h.bool_t;  -- co_xdr.h:108
   pragma Import (C, xdr_pwr_tBoolean, "xdr_pwr_tBoolean");

   function xdr_pwr_tGeneration (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tGeneration) return rpc_types_h.bool_t;  -- co_xdr.h:111
   pragma Import (C, xdr_pwr_tGeneration, "xdr_pwr_tGeneration");

   function xdr_pwr_tChar (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tChar) return rpc_types_h.bool_t;  -- co_xdr.h:114
   pragma Import (C, xdr_pwr_tChar, "xdr_pwr_tChar");

   function xdr_pwr_tInt8 (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tInt8) return rpc_types_h.bool_t;  -- co_xdr.h:117
   pragma Import (C, xdr_pwr_tInt8, "xdr_pwr_tInt8");

   function xdr_pwr_tInt16 (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tInt16) return rpc_types_h.bool_t;  -- co_xdr.h:120
   pragma Import (C, xdr_pwr_tInt16, "xdr_pwr_tInt16");

   function xdr_pwr_tInt32 (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tInt32) return rpc_types_h.bool_t;  -- co_xdr.h:123
   pragma Import (C, xdr_pwr_tInt32, "xdr_pwr_tInt32");

   function xdr_pwr_tInt64 (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.Class_pwr_tInt64.pwr_tInt64) return rpc_types_h.bool_t;  -- co_xdr.h:126
   pragma Import (C, xdr_pwr_tInt64, "xdr_pwr_tInt64");

   function xdr_pwr_tUInt8 (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tUInt8) return rpc_types_h.bool_t;  -- co_xdr.h:129
   pragma Import (C, xdr_pwr_tUInt8, "xdr_pwr_tUInt8");

   function xdr_pwr_tUInt16 (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tUInt16) return rpc_types_h.bool_t;  -- co_xdr.h:132
   pragma Import (C, xdr_pwr_tUInt16, "xdr_pwr_tUInt16");

   function xdr_pwr_tUInt32 (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tUInt32) return rpc_types_h.bool_t;  -- co_xdr.h:135
   pragma Import (C, xdr_pwr_tUInt32, "xdr_pwr_tUInt32");

   function xdr_pwr_tUInt64 (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tUInt64) return rpc_types_h.bool_t;  -- co_xdr.h:138
   pragma Import (C, xdr_pwr_tUInt64, "xdr_pwr_tUInt64");

   function xdr_pwr_tStatus (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tStatus) return rpc_types_h.bool_t;  -- co_xdr.h:141
   pragma Import (C, xdr_pwr_tStatus, "xdr_pwr_tStatus");

   function xdr_pwr_tVolumeId (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tVolumeId) return rpc_types_h.bool_t;  -- co_xdr.h:144
   pragma Import (C, xdr_pwr_tVolumeId, "xdr_pwr_tVolumeId");

   function xdr_pwr_tObjectIx (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tObjectIx) return rpc_types_h.bool_t;  -- co_xdr.h:147
   pragma Import (C, xdr_pwr_tObjectIx, "xdr_pwr_tObjectIx");

   function xdr_pwr_tObjid (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tObjid) return rpc_types_h.bool_t;  -- co_xdr.h:150
   pragma Import (C, xdr_pwr_tObjid, "xdr_pwr_tObjid");

   function xdr_pwr_tClassId (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tClassId) return rpc_types_h.bool_t;  -- co_xdr.h:153
   pragma Import (C, xdr_pwr_tClassId, "xdr_pwr_tClassId");

   function xdr_pwr_tTypeId (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tTypeId) return rpc_types_h.bool_t;  -- co_xdr.h:156
   pragma Import (C, xdr_pwr_tTypeId, "xdr_pwr_tTypeId");

   function xdr_pwr_tVersion (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tVersion) return rpc_types_h.bool_t;  -- co_xdr.h:159
   pragma Import (C, xdr_pwr_tVersion, "xdr_pwr_tVersion");

   function xdr_pwr_tPwrVersion (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tPwrVersion) return rpc_types_h.bool_t;  -- co_xdr.h:162
   pragma Import (C, xdr_pwr_tPwrVersion, "xdr_pwr_tPwrVersion");

   function xdr_pwr_tProjVersion (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tProjVersion) return rpc_types_h.bool_t;  -- co_xdr.h:165
   pragma Import (C, xdr_pwr_tProjVersion, "xdr_pwr_tProjVersion");

   function xdr_pwr_tUserId (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tUserId) return rpc_types_h.bool_t;  -- co_xdr.h:168
   pragma Import (C, xdr_pwr_tUserId, "xdr_pwr_tUserId");

   function xdr_pwr_tDbId (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tDbId) return rpc_types_h.bool_t;  -- co_xdr.h:171
   pragma Import (C, xdr_pwr_tDbId, "xdr_pwr_tDbId");

   function xdr_pwr_tNodeId (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tNodeId) return rpc_types_h.bool_t;  -- co_xdr.h:174
   pragma Import (C, xdr_pwr_tNodeId, "xdr_pwr_tNodeId");

   function xdr_pwr_tNodeIndex (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tNodeIndex) return rpc_types_h.bool_t;  -- co_xdr.h:177
   pragma Import (C, xdr_pwr_tNodeIndex, "xdr_pwr_tNodeIndex");

   function xdr_pwr_tRefId (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tRefId) return rpc_types_h.bool_t;  -- co_xdr.h:180
   pragma Import (C, xdr_pwr_tRefId, "xdr_pwr_tRefId");

   function xdr_pwr_tDlid (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tDlid) return rpc_types_h.bool_t;  -- co_xdr.h:183
   pragma Import (C, xdr_pwr_tDlid, "xdr_pwr_tDlid");

   function xdr_pwr_tSubid (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tSubid) return rpc_types_h.bool_t;  -- co_xdr.h:186
   pragma Import (C, xdr_pwr_tSubid, "xdr_pwr_tSubid");

   function xdr_pwr_tTime (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tTime) return rpc_types_h.bool_t;  -- co_xdr.h:189
   pragma Import (C, xdr_pwr_tTime, "xdr_pwr_tTime");

   function xdr_pwr_tDeltaTime (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tDeltaTime) return rpc_types_h.bool_t;  -- co_xdr.h:192
   pragma Import (C, xdr_pwr_tDeltaTime, "xdr_pwr_tDeltaTime");

   function xdr_pwr_tObjName (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tObjName) return rpc_types_h.bool_t;  -- co_xdr.h:195
   pragma Import (C, xdr_pwr_tObjName, "xdr_pwr_tObjName");

   function xdr_pwr_tPgmName (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tPgmName) return rpc_types_h.bool_t;  -- co_xdr.h:198
   pragma Import (C, xdr_pwr_tPgmName, "xdr_pwr_tPgmName");

   function xdr_pwr_tXRef (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tXRef) return rpc_types_h.bool_t;  -- co_xdr.h:201
   pragma Import (C, xdr_pwr_tXRef, "xdr_pwr_tXRef");

   function xdr_pwr_tGraphName (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tGraphName) return rpc_types_h.bool_t;  -- co_xdr.h:204
   pragma Import (C, xdr_pwr_tGraphName, "xdr_pwr_tGraphName");

   function xdr_pwr_tStructName (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tStructName) return rpc_types_h.bool_t;  -- co_xdr.h:207
   pragma Import (C, xdr_pwr_tStructName, "xdr_pwr_tStructName");

   function xdr_pwr_tAttrName (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tAttrName) return rpc_types_h.bool_t;  -- co_xdr.h:210
   pragma Import (C, xdr_pwr_tAttrName, "xdr_pwr_tAttrName");

   function xdr_pwr_tPathName (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tPathName) return rpc_types_h.bool_t;  -- co_xdr.h:213
   pragma Import (C, xdr_pwr_tPathName, "xdr_pwr_tPathName");

   function xdr_pwr_tAName (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tAName) return rpc_types_h.bool_t;  -- co_xdr.h:216
   pragma Import (C, xdr_pwr_tAName, "xdr_pwr_tAName");

   function xdr_pwr_tFullName (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tFullName) return rpc_types_h.bool_t;  -- co_xdr.h:219
   pragma Import (C, xdr_pwr_tFullName, "xdr_pwr_tFullName");

   function xdr_pwr_tString256 (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tString256) return rpc_types_h.bool_t;  -- co_xdr.h:222
   pragma Import (C, xdr_pwr_tString256, "xdr_pwr_tString256");

   function xdr_pwr_tString132 (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tString132) return rpc_types_h.bool_t;  -- co_xdr.h:225
   pragma Import (C, xdr_pwr_tString132, "xdr_pwr_tString132");

   function xdr_pwr_tString80 (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tString80) return rpc_types_h.bool_t;  -- co_xdr.h:228
   pragma Import (C, xdr_pwr_tString80, "xdr_pwr_tString80");

   function xdr_pwr_tString40 (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tString40) return rpc_types_h.bool_t;  -- co_xdr.h:231
   pragma Import (C, xdr_pwr_tString40, "xdr_pwr_tString40");

   function xdr_pwr_tString32 (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tString32) return rpc_types_h.bool_t;  -- co_xdr.h:234
   pragma Import (C, xdr_pwr_tString32, "xdr_pwr_tString32");

   function xdr_pwr_tString16 (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tString16) return rpc_types_h.bool_t;  -- co_xdr.h:237
   pragma Import (C, xdr_pwr_tString16, "xdr_pwr_tString16");

   function xdr_pwr_tString8 (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_tString8) return rpc_types_h.bool_t;  -- co_xdr.h:240
   pragma Import (C, xdr_pwr_tString8, "xdr_pwr_tString8");

   function xdr_pwr_tString (xdrs : access rpc_xdr_h.XDR; objp : Interfaces.C.Strings.chars_ptr) return rpc_types_h.bool_t;  -- co_xdr.h:244
   pragma Import (C, xdr_pwr_tString, "xdr_pwr_tString");

   function xdr_pwr_mAttrRef (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_mAttrRef) return rpc_types_h.bool_t;  -- co_xdr.h:251
   pragma Import (C, xdr_pwr_mAttrRef, "xdr_pwr_mAttrRef");

   function xdr_pwr_sAttrRef (xdrs : access rpc_xdr_h.XDR; objp : access pwr_h.pwr_sAttrRef) return rpc_types_h.bool_t;  -- co_xdr.h:254
   pragma Import (C, xdr_pwr_sAttrRef, "xdr_pwr_sAttrRef");

end co_xdr_h;
