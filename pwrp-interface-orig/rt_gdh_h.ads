pragma Ada_2005;
pragma Style_Checks (Off);

with Interfaces.C; use Interfaces.C;
with pwr_h;
with System;
with pwr_class_h;
with Interfaces.C.Strings;

package rt_gdh_h is

   --  unsupported macro: gdh_ClassNameToNumber gdh_ClassNameToId
  -- 
  -- * Proview   Open Source Process Control.
  -- * Copyright (C) 2005-2012 SSAB EMEA AB.
  -- *
  -- * This file is part of Proview.
  -- *
  -- * This program is free software; you can redistribute it and/or 
  -- * modify it under the terms of the GNU General Public License as 
  -- * published by the Free Software Foundation, either version 2 of 
  -- * the License, or (at your option) any later version.
  -- *
  -- * This program is distributed in the hope that it will be useful 
  -- * but WITHOUT ANY WARRANTY; without even the implied warranty of 
  -- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
  -- * GNU General Public License for more details.
  -- *
  -- * You should have received a copy of the GNU General Public License 
  -- * along with Proview. If not, see <http://www.gnu.org/licenses/>
  -- *
  -- * Linking Proview statically or dynamically with other modules is
  -- * making a combined work based on Proview. Thus, the terms and 
  -- * conditions of the GNU General Public License cover the whole 
  -- * combination.
  -- *
  -- * In addition, as a special exception, the copyright holders of
  -- * Proview give you permission to, from the build function in the
  -- * Proview Configurator, combine Proview with modules generated by the
  -- * Proview PLC Editor to a PLC program, regardless of the license
  -- * terms of these modules. You may copy and distribute the resulting
  -- * combined work under the terms of your choice, provided that every 
  -- * copy of the combined work is accompanied by a complete copy of 
  -- * the source code of Proview (the version used to produce the 
  -- * combined work), being distributed under the terms of the GNU 
  -- * General Public License plus this exception.
  --  

  -- rt_gdh.h 
  --   This include file defines the global datastructures and
  --   data entities in GDH. Also, the GDH entry points are defined.   

  -- *@example gdh_examples.c
  --  

  --* @addtogroup GDH  
  --@{ 
   subtype gdh_tSubid is pwr_h.pwr_tRid;

   subtype SUBID is pwr_h.pwr_tRid;

   subtype gdh_tDlid is pwr_h.pwr_tRid;

   subtype DLID is pwr_h.pwr_tRid;

  --* @defgroup DS Gdh Data Structures
  -- *  @ingroup GDH
  -- *  @{
  --  

  --* 
  -- * gdh_RefObjectInfoList parameter structure.  
  --  

  --*< Name of object or parameter  
   type gdh_sObjRef is record
      fullname : aliased pwr_h.pwr_tAName;  -- rt_gdh.h:82
      adrs : System.Address;  -- rt_gdh.h:83
      bufsize : aliased unsigned;  -- rt_gdh.h:84
   end record;
   pragma Convention (C_Pass_By_Copy, gdh_sObjRef);  -- rt_gdh.h:85

   --  skipped anonymous struct anon_104

  --*< Address of requested info  
  --*< Requested buffer size  
   subtype OBJREF_STRUCT is gdh_sObjRef;

  --*
  -- * Link states
  --  

  --*< Down. No connection  
  --*< Start state I  
  --*< Start state A  
  --*< Running. Now we're talking...  
   type gdh_eLinkState is 
     (gdh_eLinkState_Down,
      gdh_eLinkState_Istrt,
      gdh_eLinkState_Astrt,
      gdh_eLinkState_Up);
   pragma Convention (C, gdh_eLinkState);  -- rt_gdh.h:97

  --*
  -- * Node info
  --  

  --*< Node index (!= qcom qix #)  
   subtype gdh_sNodeInfo_nodename_array is Interfaces.C.char_array (0 .. 31);
   type gdh_sNodeInfo is record
      nodidx : aliased pwr_h.pwr_tNodeId;  -- rt_gdh.h:104
      nix : aliased pwr_h.pwr_tUInt32;  -- rt_gdh.h:105
      nodename : aliased gdh_sNodeInfo_nodename_array;  -- rt_gdh.h:106
      objid : aliased pwr_h.pwr_tObjid;  -- rt_gdh.h:108
      linkstate : aliased gdh_eLinkState;  -- rt_gdh.h:109
      upcnt : aliased pwr_h.pwr_tUInt32;  -- rt_gdh.h:111
      timeup : aliased pwr_h.pwr_tTime;  -- rt_gdh.h:112
      timedown : aliased pwr_h.pwr_tTime;  -- rt_gdh.h:113
   end record;
   pragma Convention (C_Pass_By_Copy, gdh_sNodeInfo);  -- rt_gdh.h:115

   --  skipped anonymous struct anon_106

  --*< Network address  
  --*< Ascii name of node (nul-terminated)  
  --*< zero-length means empty slot  
  --*< Node object for this node  
  --*< Nethandler down/istrt/astrt/up  
  --*< # of times up  
  --*< Most recent time link came up  
  --*< Most recent time link went down  
  --*
  -- * Volume info
  --  

  --*< Volume is cached  
   subtype gdh_sVolumeInfo_name_array is Interfaces.C.char_array (0 .. 31);
   type gdh_sVolumeInfo is record
      isCached : aliased pwr_h.pwr_tBoolean;  -- rt_gdh.h:122
      isLoaded : aliased pwr_h.pwr_tBoolean;  -- rt_gdh.h:123
      isMounted : aliased pwr_h.pwr_tBoolean;  -- rt_gdh.h:124
      time : aliased pwr_h.pwr_tTime;  -- rt_gdh.h:125
      name : aliased gdh_sVolumeInfo_name_array;  -- rt_gdh.h:126
      cid : aliased pwr_h.pwr_tCid;  -- rt_gdh.h:127
      nid : aliased pwr_h.pwr_tNid;  -- rt_gdh.h:128
   end record;
   pragma Convention (C_Pass_By_Copy, gdh_sVolumeInfo);  -- rt_gdh.h:130

   --  skipped anonymous struct anon_107

  --*< Volume is loaded  
  --*< Volume is mounted  
  --*< Version  
  --*< Ascii name of volume (nul-terminated)  
  --*< Class of volume  
  --*< Node index  
  --*
  -- * Attribute flags
  --  

  --*< Attribute is shadowed  
  --*< Super class attribute  
   subtype gdh_mAttrDef is unsigned;
   gdh_mAttrDef_Shadowed : constant gdh_mAttrDef := 1;
   gdh_mAttrDef_Super : constant gdh_mAttrDef := 2;  -- rt_gdh.h:138

  --*
  -- * Attribute info
  --  

  --*< Attribute name  
   type gdh_sAttrDef is record
      attrName : aliased pwr_h.pwr_tObjName;  -- rt_gdh.h:145
      attrLevel : aliased unsigned_long;  -- rt_gdh.h:146
      attrClass : aliased pwr_class_h.pwr_eClass;  -- rt_gdh.h:147
      flags : aliased unsigned_long;  -- rt_gdh.h:148
      attr : access pwr_class_h.pwr_uParDef;  -- rt_gdh.h:149
   end record;
   pragma Convention (C_Pass_By_Copy, gdh_sAttrDef);  -- rt_gdh.h:151

   --  skipped anonymous struct anon_109

  --*< Attribute level  
  --*< Attribute class  
  --*< Attribute flags  
  --*< Pointer to attribute object  
  --*
  -- * Enum value info
  --  

  --*< Value name  
   type gdh_sValueDef is record
      Name : aliased pwr_h.pwr_tObjName;  -- rt_gdh.h:158
      Value : access pwr_class_h.pwr_sValue;  -- rt_gdh.h:159
   end record;
   pragma Convention (C_Pass_By_Copy, gdh_sValueDef);  -- rt_gdh.h:161

   --  skipped anonymous struct anon_110

  --*< Pointer to value object  
  --*
  -- * Mask bit info
  --  

  --*< Value name  
   type gdh_sBitDef is record
      Name : aliased pwr_h.pwr_tObjName;  -- rt_gdh.h:168
      Bit : access pwr_class_h.pwr_sBit;  -- rt_gdh.h:169
   end record;
   pragma Convention (C_Pass_By_Copy, gdh_sBitDef);  -- rt_gdh.h:171

   --  skipped anonymous struct anon_111

  --*< Pointer to bit object  
  -- GDH entrypoints (as function prototypes).   
  --* @}  
  --* 
  -- * @defgroup GDHFC Gdh Functions
  -- * @ingroup GDH
  -- * @{
  --  

   function gdh_ArefANameToAref
     (arp : access pwr_h.pwr_sAttrRef;
      aname : Interfaces.C.Strings.chars_ptr;
      oarp : access pwr_h.pwr_sAttrRef) return pwr_h.pwr_tStatus;  -- rt_gdh.h:185
   pragma Import (C, gdh_ArefANameToAref, "gdh_ArefANameToAref");

   function gdh_ArefDisabled (arp : access pwr_h.pwr_sAttrRef; disabled : access pwr_h.pwr_tDisableAttr) return pwr_h.pwr_tStatus;  -- rt_gdh.h:192
   pragma Import (C, gdh_ArefDisabled, "gdh_ArefDisabled");

   function gdh_AttrArefToObjectAref (arp : access pwr_h.pwr_sAttrRef; oarp : access pwr_h.pwr_sAttrRef) return pwr_h.pwr_tStatus;  -- rt_gdh.h:198
   pragma Import (C, gdh_AttrArefToObjectAref, "gdh_AttrArefToObjectAref");

   function gdh_AttrrefToName
     (attributeReference : access pwr_h.pwr_sAttrRef;
      nameBuffer : Interfaces.C.Strings.chars_ptr;
      sizeOfNameBuffer : unsigned;
      nameType : pwr_h.pwr_tBitMask) return pwr_h.pwr_tStatus;  -- rt_gdh.h:204
   pragma Import (C, gdh_AttrrefToName, "gdh_AttrrefToName");

   function gdh_AttrRefToPointer (arp : access pwr_h.pwr_sAttrRef; p : System.Address) return pwr_h.pwr_tStatus;  -- rt_gdh.h:212
   pragma Import (C, gdh_AttrRefToPointer, "gdh_AttrRefToPointer");

   function gdh_AttrStringToValue
     (type_id : int;
      value_str : Interfaces.C.Strings.chars_ptr;
      buffer_ptr : System.Address;
      buff_size : int;
      attr_size : int) return pwr_h.pwr_tStatus;  -- rt_gdh.h:218
   pragma Import (C, gdh_AttrStringToValue, "gdh_AttrStringToValue");

   function gdh_AttrValueToString
     (type_id : pwr_class_h.pwr_eType;
      tid : pwr_h.pwr_tTid;
      value_ptr : System.Address;
      str : Interfaces.C.Strings.chars_ptr;
      size : int;
      len : access int;
      format : Interfaces.C.Strings.chars_ptr) return pwr_h.pwr_tStatus;  -- rt_gdh.h:227
   pragma Import (C, gdh_AttrValueToString, "gdh_AttrValueToString");

   function gdh_ClassAttrrefToAttr
     (classid : pwr_h.pwr_tClassId;
      attributeReference : access pwr_h.pwr_sAttrRef;
      nameBuffer : Interfaces.C.Strings.chars_ptr;
      sizeOfNameBuffer : int) return pwr_h.pwr_tStatus;  -- rt_gdh.h:238
   pragma Import (C, gdh_ClassAttrrefToAttr, "gdh_ClassAttrrefToAttr");

   function gdh_ClassAttrToAttrref
     (classid : pwr_h.pwr_tClassId;
      attributeName : Interfaces.C.Strings.chars_ptr;
      attributeReference : access pwr_h.pwr_sAttrRef) return pwr_h.pwr_tStatus;  -- rt_gdh.h:246
   pragma Import (C, gdh_ClassAttrToAttrref, "gdh_ClassAttrToAttrref");

   function gdh_ClassNameToId (className : Interfaces.C.Strings.chars_ptr; classid : access pwr_h.pwr_tClassId) return pwr_h.pwr_tStatus;  -- rt_gdh.h:253
   pragma Import (C, gdh_ClassNameToId, "gdh_ClassNameToId");

   function gdh_CreateObject
     (objectName : Interfaces.C.Strings.chars_ptr;
      classid : pwr_h.pwr_tClassId;
      sizeOfObjectData : unsigned;
      objectId : access pwr_h.pwr_tObjid;
      internal1 : pwr_h.pwr_tObjid;
      internal2 : pwr_h.pwr_tBitMask;
      internal3 : pwr_h.pwr_tObjid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:259
   pragma Import (C, gdh_CreateObject, "gdh_CreateObject");

   function gdh_DeleteObject (objectId : pwr_h.pwr_tObjid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:270
   pragma Import (C, gdh_DeleteObject, "gdh_DeleteObject");

   function gdh_DLRefObjectInfoAttrref
     (addressOfAttributeReference : access pwr_h.pwr_sAttrRef;
      objectData : System.Address;
      directLinkId : access pwr_h.pwr_tDlid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:275
   pragma Import (C, gdh_DLRefObjectInfoAttrref, "gdh_DLRefObjectInfoAttrref");

   function gdh_DLUnrefObjectInfo (directLinkId : pwr_h.pwr_tDlid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:282
   pragma Import (C, gdh_DLUnrefObjectInfo, "gdh_DLUnrefObjectInfo");

   procedure gdh_DLUnrefObjectInfoAll;  -- rt_gdh.h:287
   pragma Import (C, gdh_DLUnrefObjectInfoAll, "gdh_DLUnrefObjectInfoAll");

   function gdh_FReadObject (filename : Interfaces.C.Strings.chars_ptr; arp : access pwr_h.pwr_tAttrRef) return pwr_h.pwr_tStatus;  -- rt_gdh.h:290
   pragma Import (C, gdh_FReadObject, "gdh_FReadObject");

   function gdh_FWriteObject (filename : Interfaces.C.Strings.chars_ptr; arp : access pwr_h.pwr_tAttrRef) return pwr_h.pwr_tStatus;  -- rt_gdh.h:296
   pragma Import (C, gdh_FWriteObject, "gdh_FWriteObject");

   function gdh_GetAlarmInfo
     (object : pwr_h.pwr_tObjid;
      alarmLevel : access pwr_h.pwr_tUInt32;
      maxAlarmLevel : access pwr_h.pwr_tUInt32;
      alarmBlockLevel : access pwr_h.pwr_tUInt32;
      maxAlarmBlockLevel : access pwr_h.pwr_tUInt32;
      alarmVisibility : access pwr_h.pwr_tUInt32) return pwr_h.pwr_tStatus;  -- rt_gdh.h:302
   pragma Import (C, gdh_GetAlarmInfo, "gdh_GetAlarmInfo");

   function gdh_GetAttributeCharAttrref
     (attributeReference : access pwr_h.pwr_sAttrRef;
      attributeType : access pwr_h.pwr_tTypeId;
      attributeSize : access unsigned;
      attributeOffset : access unsigned;
      attributeDimension : access unsigned) return pwr_h.pwr_tStatus;  -- rt_gdh.h:312
   pragma Import (C, gdh_GetAttributeCharAttrref, "gdh_GetAttributeCharAttrref");

   function gdh_GetAttributeFlags (arp : access pwr_h.pwr_sAttrRef; flags : access unsigned) return pwr_h.pwr_tStatus;  -- rt_gdh.h:321
   pragma Import (C, gdh_GetAttributeFlags, "gdh_GetAttributeFlags");

   function gdh_GetAttributeCharacteristics
     (name : Interfaces.C.Strings.chars_ptr;
      tid : access pwr_h.pwr_tTypeId;
      size : access pwr_h.pwr_tUInt32;
      offs : access pwr_h.pwr_tUInt32;
      elem : access pwr_h.pwr_tUInt32) return pwr_h.pwr_tStatus;  -- rt_gdh.h:327
   pragma Import (C, gdh_GetAttributeCharacteristics, "gdh_GetAttributeCharacteristics");

   function gdh_GetAttrRefTid (arp : access pwr_h.pwr_sAttrRef; tid : access pwr_h.pwr_tTid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:336
   pragma Import (C, gdh_GetAttrRefTid, "gdh_GetAttrRefTid");

   function gdh_GetChild (object : pwr_h.pwr_tObjid; firstChild : access pwr_h.pwr_tObjid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:342
   pragma Import (C, gdh_GetChild, "gdh_GetChild");

   function gdh_GetClassList (classid : pwr_h.pwr_tClassId; object : access pwr_h.pwr_tObjid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:348
   pragma Import (C, gdh_GetClassList, "gdh_GetClassList");

   function gdh_GetClassListAttrRef (cid : pwr_h.pwr_tClassId; arp : access pwr_h.pwr_sAttrRef) return pwr_h.pwr_tStatus;  -- rt_gdh.h:354
   pragma Import (C, gdh_GetClassListAttrRef, "gdh_GetClassListAttrRef");

   function gdh_GetDynamicAttrSize
     (oid : pwr_h.pwr_tObjid;
      name : Interfaces.C.Strings.chars_ptr;
      size : access pwr_h.pwr_tUInt32) return pwr_h.pwr_tStatus;  -- rt_gdh.h:360
   pragma Import (C, gdh_GetDynamicAttrSize, "gdh_GetDynamicAttrSize");

   function gdh_GetEnumValueDef
     (tid : pwr_h.pwr_tTid;
      vd : System.Address;
      rows : access int) return pwr_h.pwr_tStatus;  -- rt_gdh.h:367
   pragma Import (C, gdh_GetEnumValueDef, "gdh_GetEnumValueDef");

   function gdh_GetLocalParent (object : pwr_h.pwr_tObjid; parent : access pwr_h.pwr_tObjid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:374
   pragma Import (C, gdh_GetLocalParent, "gdh_GetLocalParent");

   function gdh_GetMaskBitDef
     (tid : pwr_h.pwr_tTid;
      bd : System.Address;
      rows : access int) return pwr_h.pwr_tStatus;  -- rt_gdh.h:380
   pragma Import (C, gdh_GetMaskBitDef, "gdh_GetMaskBitDef");

   function gdh_GetNextAttrRef
     (cid : pwr_h.pwr_tClassId;
      arp : access pwr_h.pwr_sAttrRef;
      new_arp : access pwr_h.pwr_sAttrRef) return pwr_h.pwr_tStatus;  -- rt_gdh.h:387
   pragma Import (C, gdh_GetNextAttrRef, "gdh_GetNextAttrRef");

   function gdh_GetNextObject (object : pwr_h.pwr_tObjid; nextObject : access pwr_h.pwr_tObjid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:394
   pragma Import (C, gdh_GetNextObject, "gdh_GetNextObject");

   function gdh_GetNextObjectAttrRef
     (cid : pwr_h.pwr_tClassId;
      arp : access pwr_h.pwr_sAttrRef;
      new_arp : access pwr_h.pwr_sAttrRef) return pwr_h.pwr_tStatus;  -- rt_gdh.h:401
   pragma Import (C, gdh_GetNextObjectAttrRef, "gdh_GetNextObjectAttrRef");

  --*< The class identity.  
  --*< The attribute reference.  
  --*< Receives the attribute reference  
   function gdh_GetNextSibling (object : pwr_h.pwr_tObjid; nextSibling : access pwr_h.pwr_tObjid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:408
   pragma Import (C, gdh_GetNextSibling, "gdh_GetNextSibling");

   function gdh_GetNextVolume (pvid : pwr_h.pwr_tVid; vid : access pwr_h.pwr_tVid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:414
   pragma Import (C, gdh_GetNextVolume, "gdh_GetNextVolume");

   function gdh_GetNodeIndex (nodeIndex : access pwr_h.pwr_tNodeId) return pwr_h.pwr_tStatus;  -- rt_gdh.h:420
   pragma Import (C, gdh_GetNodeIndex, "gdh_GetNodeIndex");

   function gdh_GetNodeInfo (nodidx : pwr_h.pwr_tNodeId; ip : access gdh_sNodeInfo) return pwr_h.pwr_tStatus;  -- rt_gdh.h:425
   pragma Import (C, gdh_GetNodeInfo, "gdh_GetNodeInfo");

   function gdh_GetNodeObject (nodeIndex : pwr_h.pwr_tNodeId; object : access pwr_h.pwr_tObjid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:431
   pragma Import (C, gdh_GetNodeObject, "gdh_GetNodeObject");

   function gdh_GetObjectClass (object : pwr_h.pwr_tObjid; classid : access pwr_h.pwr_tClassId) return pwr_h.pwr_tStatus;  -- rt_gdh.h:437
   pragma Import (C, gdh_GetObjectClass, "gdh_GetObjectClass");

   function gdh_GetObjectClassList
     (cid : pwr_h.pwr_tCid;
      oid : pwr_h.pwr_tOid;
      arp : access pwr_h.pwr_sAttrRef) return pwr_h.pwr_tStatus;  -- rt_gdh.h:443
   pragma Import (C, gdh_GetObjectClassList, "gdh_GetObjectClassList");

  --*< The class identity.  
  --*< Host object.  
  --*< Receives the attribute reference.  
   function gdh_GetObjectDLCount (object : pwr_h.pwr_tObjid; count : access pwr_h.pwr_tUInt32) return pwr_h.pwr_tStatus;  -- rt_gdh.h:450
   pragma Import (C, gdh_GetObjectDLCount, "gdh_GetObjectDLCount");

   function gdh_GetObjectInfo
     (name : Interfaces.C.Strings.chars_ptr;
      bufp : pwr_h.pwr_tAddress;
      bufsize : pwr_h.pwr_tUInt32) return pwr_h.pwr_tStatus;  -- rt_gdh.h:456
   pragma Import (C, gdh_GetObjectInfo, "gdh_GetObjectInfo");

   function gdh_GetObjectInfoAttrref
     (attributeReference : access pwr_h.pwr_sAttrRef;
      buffer : System.Address;
      sizeOfBuffer : unsigned) return pwr_h.pwr_tStatus;  -- rt_gdh.h:463
   pragma Import (C, gdh_GetObjectInfoAttrref, "gdh_GetObjectInfoAttrref");

   function gdh_GetObjectLocation (object : pwr_h.pwr_tObjid; isLocal : access pwr_h.pwr_tBoolean) return pwr_h.pwr_tStatus;  -- rt_gdh.h:470
   pragma Import (C, gdh_GetObjectLocation, "gdh_GetObjectLocation");

   function gdh_GetObjectNodeIndex (object : pwr_h.pwr_tObjid; nodeIndex : access pwr_h.pwr_tNodeId) return pwr_h.pwr_tStatus;  -- rt_gdh.h:476
   pragma Import (C, gdh_GetObjectNodeIndex, "gdh_GetObjectNodeIndex");

   function gdh_GetObjectSize (oid : pwr_h.pwr_tObjid; size : access pwr_h.pwr_tUInt32) return pwr_h.pwr_tStatus;  -- rt_gdh.h:482
   pragma Import (C, gdh_GetObjectSize, "gdh_GetObjectSize");

   function gdh_GetParent (object : pwr_h.pwr_tObjid; parent : access pwr_h.pwr_tObjid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:488
   pragma Import (C, gdh_GetParent, "gdh_GetParent");

   function gdh_GetPreviousObject (object : pwr_h.pwr_tObjid; previousObject : access pwr_h.pwr_tObjid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:494
   pragma Import (C, gdh_GetPreviousObject, "gdh_GetPreviousObject");

   function gdh_GetPreviousSibling (object : pwr_h.pwr_tObjid; previousSibling : access pwr_h.pwr_tObjid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:500
   pragma Import (C, gdh_GetPreviousSibling, "gdh_GetPreviousSibling");

   function gdh_GetRootList (object : access pwr_h.pwr_tObjid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:506
   pragma Import (C, gdh_GetRootList, "gdh_GetRootList");

   function gdh_GetSecurityInfo (security : access pwr_class_h.pwr_sSecurity) return pwr_h.pwr_tStatus;  -- rt_gdh.h:511
   pragma Import (C, gdh_GetSecurityInfo, "gdh_GetSecurityInfo");

   function gdh_GetVolumeInfo (vid : pwr_h.pwr_tVid; info : access gdh_sVolumeInfo) return pwr_h.pwr_tStatus;  -- rt_gdh.h:516
   pragma Import (C, gdh_GetVolumeInfo, "gdh_GetVolumeInfo");

   function gdh_GetVolumeList (vid : access pwr_h.pwr_tVid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:522
   pragma Import (C, gdh_GetVolumeList, "gdh_GetVolumeList");

   function gdh_GetRootVolume (vid : access pwr_h.pwr_tVid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:527
   pragma Import (C, gdh_GetRootVolume, "gdh_GetRootVolume");

   function gdh_SearchFile
     (oid : pwr_h.pwr_tOid;
      dir : Interfaces.C.Strings.chars_ptr;
      pattern : Interfaces.C.Strings.chars_ptr;
      filelist : System.Address;
      filecnt : access int) return pwr_h.pwr_tStatus;  -- rt_gdh.h:532
   pragma Import (C, gdh_SearchFile, "gdh_SearchFile");

   function gdh_GetSubscriptionOldness
     (subid : pwr_h.pwr_tSubid;
      isOld : access pwr_h.pwr_tBoolean;
      lastUpdate : access pwr_h.pwr_tTime;
      lastStatus : access pwr_h.pwr_tStatus) return pwr_h.pwr_tStatus;  -- rt_gdh.h:541
   pragma Import (C, gdh_GetSubscriptionOldness, "gdh_GetSubscriptionOldness");

   function gdh_GetSuperClass
     (cid : pwr_h.pwr_tCid;
      supercid : access pwr_h.pwr_tCid;
      oid : pwr_h.pwr_tObjid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:549
   pragma Import (C, gdh_GetSuperClass, "gdh_GetSuperClass");

   function gdh_Init (name : Interfaces.C.Strings.chars_ptr) return pwr_h.pwr_tStatus;  -- rt_gdh.h:555
   pragma Import (C, gdh_Init, "gdh_Init");

   function gdh_MountObjidToPointer (object : pwr_h.pwr_tObjid; objectData : System.Address) return pwr_h.pwr_tStatus;  -- rt_gdh.h:560
   pragma Import (C, gdh_MountObjidToPointer, "gdh_MountObjidToPointer");

   function gdh_MoveObject (objectId : pwr_h.pwr_tObjid; newParentId : pwr_h.pwr_tObjid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:566
   pragma Import (C, gdh_MoveObject, "gdh_MoveObject");

   function gdh_NameToAttrref
     (parent : pwr_h.pwr_tObjid;
      attributeName : Interfaces.C.Strings.chars_ptr;
      attributeReference : access pwr_h.pwr_sAttrRef) return pwr_h.pwr_tStatus;  -- rt_gdh.h:572
   pragma Import (C, gdh_NameToAttrref, "gdh_NameToAttrref");

   function gdh_NameToObjid (objectName : Interfaces.C.Strings.chars_ptr; objid : access pwr_h.pwr_tObjid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:579
   pragma Import (C, gdh_NameToObjid, "gdh_NameToObjid");

   function gdh_NameToPointer (objectName : Interfaces.C.Strings.chars_ptr; objectData : System.Address) return pwr_h.pwr_tStatus;  -- rt_gdh.h:585
   pragma Import (C, gdh_NameToPointer, "gdh_NameToPointer");

   function gdh_NethandlerRunning return pwr_h.pwr_tStatus;  -- rt_gdh.h:591
   pragma Import (C, gdh_NethandlerRunning, "gdh_NethandlerRunning");

   function gdh_ObjidToName
     (oid : pwr_h.pwr_tObjid;
      namebuf : Interfaces.C.Strings.chars_ptr;
      size : pwr_h.pwr_tUInt32;
      nametype : pwr_h.pwr_tBitMask) return pwr_h.pwr_tStatus;  -- rt_gdh.h:594
   pragma Import (C, gdh_ObjidToName, "gdh_ObjidToName");

   function gdh_ObjidToPointer (object : pwr_h.pwr_tObjid; objectData : System.Address) return pwr_h.pwr_tStatus;  -- rt_gdh.h:602
   pragma Import (C, gdh_ObjidToPointer, "gdh_ObjidToPointer");

   function gdh_RefObjectInfo
     (attributeName : Interfaces.C.Strings.chars_ptr;
      objectData : System.Address;
      subid : access pwr_h.pwr_tSubid;
      sizeOfObjectData : unsigned) return pwr_h.pwr_tStatus;  -- rt_gdh.h:608
   pragma Import (C, gdh_RefObjectInfo, "gdh_RefObjectInfo");

   function gdh_RefObjectInfoList
     (nEntry : unsigned;
      objectReference : access gdh_sObjRef;
      subid : access pwr_h.pwr_tSubid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:616
   pragma Import (C, gdh_RefObjectInfoList, "gdh_RefObjectInfoList");

   function gdh_RenameObject (objectId : pwr_h.pwr_tObjid; newObjectName : Interfaces.C.Strings.chars_ptr) return pwr_h.pwr_tStatus;  -- rt_gdh.h:623
   pragma Import (C, gdh_RenameObject, "gdh_RenameObject");

   function gdh_SetAlarmBlockLevel (object : pwr_h.pwr_tObjid; alarmBlockLevel : pwr_h.pwr_tUInt32) return pwr_h.pwr_tStatus;  -- rt_gdh.h:629
   pragma Import (C, gdh_SetAlarmBlockLevel, "gdh_SetAlarmBlockLevel");

   function gdh_SetAlarmLevel (object : pwr_h.pwr_tObjid; alarmLevel : pwr_h.pwr_tUInt32) return pwr_h.pwr_tStatus;  -- rt_gdh.h:635
   pragma Import (C, gdh_SetAlarmLevel, "gdh_SetAlarmLevel");

   function gdh_SetObjectInfo
     (attributeName : Interfaces.C.Strings.chars_ptr;
      buffer : System.Address;
      sizeOfBuffer : unsigned) return pwr_h.pwr_tStatus;  -- rt_gdh.h:641
   pragma Import (C, gdh_SetObjectInfo, "gdh_SetObjectInfo");

   function gdh_SetObjectInfoAttrref
     (attributeReference : access pwr_h.pwr_sAttrRef;
      buffer : System.Address;
      sizeOfBuffer : unsigned) return pwr_h.pwr_tStatus;  -- rt_gdh.h:648
   pragma Import (C, gdh_SetObjectInfoAttrref, "gdh_SetObjectInfoAttrref");

   function gdh_SubAssociateBuffer
     (subid : pwr_h.pwr_tSubid;
      buffer : System.Address;
      sizeOfBuffer : unsigned) return pwr_h.pwr_tStatus;  -- rt_gdh.h:655
   pragma Import (C, gdh_SubAssociateBuffer, "gdh_SubAssociateBuffer");

   function gdh_SubData
     (subid : pwr_h.pwr_tSubid;
      buffer : System.Address;
      sizeOfBuffer : unsigned) return pwr_h.pwr_tStatus;  -- rt_gdh.h:662
   pragma Import (C, gdh_SubData, "gdh_SubData");

   function gdh_SubRefObjectInfoAttrref (attributeReference : access pwr_h.pwr_sAttrRef; subid : access pwr_h.pwr_tSubid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:669
   pragma Import (C, gdh_SubRefObjectInfoAttrref, "gdh_SubRefObjectInfoAttrref");

   function gdh_SubRefObjectInfoList
     (entryCount : unsigned;
      object : System.Address;
      isAttrref : access pwr_h.pwr_tBoolean;
      subid : access pwr_h.pwr_tSubid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:675
   pragma Import (C, gdh_SubRefObjectInfoList, "gdh_SubRefObjectInfoList");

   function gdh_SubRefObjectInfoName (attributeName : Interfaces.C.Strings.chars_ptr; subid : access pwr_h.pwr_tSubid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:683
   pragma Import (C, gdh_SubRefObjectInfoName, "gdh_SubRefObjectInfoName");

   function gdh_SubSize (subid : pwr_h.pwr_tSubid; size : access unsigned) return pwr_h.pwr_tStatus;  -- rt_gdh.h:689
   pragma Import (C, gdh_SubSize, "gdh_SubSize");

   function gdh_SetSubscriptionDefaults (defaultUpdateTime : pwr_h.pwr_tInt32; defaultTimeOut : pwr_h.pwr_tInt32) return pwr_h.pwr_tStatus;  -- rt_gdh.h:695
   pragma Import (C, gdh_SetSubscriptionDefaults, "gdh_SetSubscriptionDefaults");

   function gdh_SubUnrefObjectInfo (subid : pwr_h.pwr_tSubid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:701
   pragma Import (C, gdh_SubUnrefObjectInfo, "gdh_SubUnrefObjectInfo");

   procedure gdh_SubUnrefObjectInfoAll;  -- rt_gdh.h:706
   pragma Import (C, gdh_SubUnrefObjectInfoAll, "gdh_SubUnrefObjectInfoAll");

   function gdh_SubUnrefObjectInfoList (nEntry : unsigned; subid : access pwr_h.pwr_tSubid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:709
   pragma Import (C, gdh_SubUnrefObjectInfoList, "gdh_SubUnrefObjectInfoList");

   function gdh_UnrefObjectInfo (subid : pwr_h.pwr_tSubid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:715
   pragma Import (C, gdh_UnrefObjectInfo, "gdh_UnrefObjectInfo");

   function gdh_UnrefObjectInfoAll return pwr_h.pwr_tStatus;  -- rt_gdh.h:720
   pragma Import (C, gdh_UnrefObjectInfoAll, "gdh_UnrefObjectInfoAll");

   function gdh_VolumeIdToName
     (vid : pwr_h.pwr_tVid;
      name : Interfaces.C.Strings.chars_ptr;
      size : int) return pwr_h.pwr_tStatus;  -- rt_gdh.h:723
   pragma Import (C, gdh_VolumeIdToName, "gdh_VolumeIdToName");

  --* @}  
   procedure gdh_InitialLoadDone (systemobject : pwr_h.pwr_tObjid; nodeobject : pwr_h.pwr_tObjid);  -- rt_gdh.h:734
   pragma Import (C, gdh_InitialLoadDone, "gdh_InitialLoadDone");

   function gdh_IsAlias (object : pwr_h.pwr_tObjid; isAlias : access pwr_h.pwr_tBoolean) return pwr_h.pwr_tStatus;  -- rt_gdh.h:742
   pragma Import (C, gdh_IsAlias, "gdh_IsAlias");

   function gdh_IsMountClean (object : pwr_h.pwr_tObjid; isMountClean : access pwr_h.pwr_tBoolean) return pwr_h.pwr_tStatus;  -- rt_gdh.h:748
   pragma Import (C, gdh_IsMountClean, "gdh_IsMountClean");

  -- * Exclusive mode
  --  

   procedure gdh_ExclusiveModeOn;  -- rt_gdh.h:758
   pragma Import (C, gdh_ExclusiveModeOn, "gdh_ExclusiveModeOn");

   procedure gdh_ExclusiveModeOff;  -- rt_gdh.h:761
   pragma Import (C, gdh_ExclusiveModeOff, "gdh_ExclusiveModeOff");

  -- * Translation between Rtdb reference and job context virtual address formats.
  --  

   procedure gdh_StoreRtdbPointer (rtdbReference : access unsigned_long; virtualAddress : System.Address);  -- rt_gdh.h:767
   pragma Import (C, gdh_StoreRtdbPointer, "gdh_StoreRtdbPointer");

   function gdh_TranslateRtdbPointer (rtdbReference : unsigned_long) return System.Address;  -- rt_gdh.h:773
   pragma Import (C, gdh_TranslateRtdbPointer, "gdh_TranslateRtdbPointer");

   function gdh_GetObjectBodyDef
     (cid : pwr_h.pwr_tCid;
      bodydef : System.Address;
      rows : access int;
      oid : pwr_h.pwr_tOid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:778
   pragma Import (C, gdh_GetObjectBodyDef, "gdh_GetObjectBodyDef");

   function gdh_GetTrueObjectBodyDef
     (cid : pwr_h.pwr_tCid;
      bodydef : System.Address;
      rows : access int) return pwr_h.pwr_tStatus;  -- rt_gdh.h:786
   pragma Import (C, gdh_GetTrueObjectBodyDef, "gdh_GetTrueObjectBodyDef");

   function gdh_GetAttrRefAdef (arp : access pwr_h.pwr_sAttrRef; attrdef : access gdh_sAttrDef) return pwr_h.pwr_tStatus;  -- rt_gdh.h:793
   pragma Import (C, gdh_GetAttrRefAdef, "gdh_GetAttrRefAdef");

   function gdh_SetObjectReadOnly (oid : pwr_h.pwr_tOid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:799
   pragma Import (C, gdh_SetObjectReadOnly, "gdh_SetObjectReadOnly");

  -- Undocumented functions. For internal use only.   
   function gdh_MDAttribute
     (classid : pwr_h.pwr_tClassId;
      attributeReference : access pwr_h.pwr_sAttrRef;
      attributeName : Interfaces.C.Strings.chars_ptr;
      attributeType : access pwr_h.pwr_tTypeId;
      attributeSize : access unsigned;
      attributeOffset : access unsigned;
      attributeDimension : access unsigned) return pwr_h.pwr_tStatus;  -- rt_gdh.h:806
   pragma Import (C, gdh_MDAttribute, "gdh_MDAttribute");

   function gdh_SetCache (activation_level : pwr_h.pwr_tUInt32; trimmed_level : pwr_h.pwr_tUInt32) return pwr_h.pwr_tStatus;  -- rt_gdh.h:817
   pragma Import (C, gdh_SetCache, "gdh_SetCache");

   procedure gdh_RegisterLogFunction (func : access procedure
        (arg1 : Interfaces.C.Strings.chars_ptr;
         arg2 : System.Address;
         arg3 : unsigned));  -- rt_gdh.h:823
   pragma Import (C, gdh_RegisterLogFunction, "gdh_RegisterLogFunction");

   function gdh_GetSubClassList (cid : pwr_h.pwr_tCid; subcid : access pwr_h.pwr_tCid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:828
   pragma Import (C, gdh_GetSubClassList, "gdh_GetSubClassList");

   function gdh_GetNextSubClass
     (cid : pwr_h.pwr_tCid;
      psubcid : pwr_h.pwr_tCid;
      subcid : access pwr_h.pwr_tCid) return pwr_h.pwr_tStatus;  -- rt_gdh.h:834
   pragma Import (C, gdh_GetNextSubClass, "gdh_GetNextSubClass");

  --* @}  
end rt_gdh_h;
