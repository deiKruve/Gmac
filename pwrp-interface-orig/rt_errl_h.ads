pragma Ada_2005;
pragma Style_Checks (Off);

with Interfaces.C; use Interfaces.C;
with pwr_h;
with Interfaces.C.Strings;
with System;

package rt_errl_h is


   LOG_MAX_MSG_SIZE : constant := 256;  --  rt_errl.h:58

  -- 
  -- * Proview   Open Source Process Control.
  -- * Copyright (C) 2005-2014 SSAB EMEA AB.
  -- *
  -- * This file is part of Proview.
  -- *
  -- * This program is free software; you can redistribute it and/or 
  -- * modify it under the terms of the GNU General Public License as 
  -- * published by the Free Software Foundation, either version 2 of 
  -- * the License, or (at your option) any later version.
  -- *
  -- * This program is distributed in the hope that it will be useful 
  -- * but WITHOUT ANY WARRANTY; without even the implied warranty of 
  -- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
  -- * GNU General Public License for more details.
  -- *
  -- * You should have received a copy of the GNU General Public License 
  -- * along with Proview. If not, see <http://www.gnu.org/licenses/>
  -- *
  -- * Linking Proview statically or dynamically with other modules is
  -- * making a combined work based on Proview. Thus, the terms and 
  -- * conditions of the GNU General Public License cover the whole 
  -- * combination.
  -- *
  -- * In addition, as a special exception, the copyright holders of
  -- * Proview give you permission to, from the build function in the
  -- * Proview Configurator, combine Proview with modules generated by the
  -- * Proview PLC Editor to a PLC program, regardless of the license
  -- * terms of these modules. You may copy and distribute the resulting
  -- * combined work under the terms of your choice, provided that every 
  -- * copy of the combined work is accompanied by a complete copy of 
  -- * the source code of Proview (the version used to produce the 
  -- * combined work), being distributed under the terms of the GNU 
  -- * General Public License plus this exception.
  --  

   function errl_Exit return pwr_h.pwr_tStatus;  -- rt_errl.h:60
   pragma Import (CPP, errl_Exit, "_Z9errl_Exitv");

   procedure errl_Init
     (termname : Interfaces.C.Strings.chars_ptr;
      log_cb : access procedure
        (arg1 : System.Address;
         arg2 : Interfaces.C.Strings.chars_ptr;
         arg3 : char;
         arg4 : pwr_h.pwr_tStatus;
         arg5 : int;
         arg6 : int);
      userdata : System.Address);  -- rt_errl.h:61
   pragma Import (CPP, errl_Init, "_Z9errl_InitPKcPFvPvPcciiiES1_");

   procedure errl_SetTerm (termname : Interfaces.C.Strings.chars_ptr);  -- rt_errl.h:64
   pragma Import (CPP, errl_SetTerm, "_Z12errl_SetTermPKc");

   procedure errl_SetFile (filename : Interfaces.C.Strings.chars_ptr);  -- rt_errl.h:65
   pragma Import (CPP, errl_SetFile, "_Z12errl_SetFilePKc");

end rt_errl_h;
