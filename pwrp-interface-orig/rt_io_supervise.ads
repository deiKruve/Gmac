-- 
-- * Proview   Open Source Process Control.
-- * Copyright (C) 2005-2014 SSAB EMEA AB.
-- *
-- * This file is part of Proview.
-- *
-- * This program is free software; you can redistribute it and/or 
-- * modify it under the terms of the GNU General Public License as 
-- * published by the Free Software Foundation, either version 2 of 
-- * the License, or (at your option) any later version.
-- *
-- * This program is distributed in the hope that it will be useful 
-- * but WITHOUT ANY WARRANTY; without even the implied warranty of 
-- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
-- * GNU General Public License for more details.
-- *
-- * You should have received a copy of the GNU General Public License 
-- * along with Proview. If not, see <http://www.gnu.org/licenses/>
-- *
-- * Linking Proview statically or dynamically with other modules is
-- * making a combined work based on Proview. Thus, the terms and 
-- * conditions of the GNU General Public License cover the whole 
-- * combination.
-- *
-- * In addition, as a special exception, the copyright holders of
-- * Proview give you permission to, from the build function in the
-- * Proview Configurator, combine Proview with modules generated by the
-- * Proview PLC Editor to a PLC program, regardless of the license
-- * terms of these modules. You may copy and distribute the resulting
-- * combined work under the terms of your choice, provided that every 
-- * copy of the combined work is accompanied by a complete copy of 
-- * the source code of Proview (the version used to produce the 
-- * combined work), being distributed under the terms of the GNU 
-- * General Public License plus this exception.
--  
--   Ada binding by Jan de Kruijf (jan.de.kruyf@hotmail.com)
--

pragma Ada_2005;
pragma Style_Checks (Off);

with Interfaces.C; use Interfaces.C;
with pwr;
limited with pwr_baseclasses;
limited with rt_plc_timer;
with System;

package rt_io_supervise is
   
   type s_ASupLstLink;
   subtype sASupLstLink is s_ASupLstLink;

   type s_DSupLstLink;
   subtype sDSupLstLink is s_DSupLstLink;

   type io_sSupCtx_u is 
      record
	 TimerLstP   : access sASupLstLink;
	 ASupAnaLstP : access sASupLstLink;
	 DSupDigLstP : access sDSupLstLink;
	 TimerTime   : aliased pwr.pwr_tFloat32;
      end record;
   pragma Convention (C_Pass_By_Copy, io_sSupCtx_u);  -- rt_io_supervise.h:57

   type io_tSupCtx is access all io_sSupCtx_u;  -- rt_io_supervise.h:62

   type s_ASupLstLink is 
      record
	 NextP      : access sASupLstLink; 
	 NextTimerP : access sASupLstLink; 
	 SupP       : access pwr_baseclasses.pwr_sClass_ASup; 
	 ValueP     : access pwr.pwr_tFloat32;
	 TimerP     : access rt_plc_timer.plc_sTimer;
      end record;
   pragma Convention (C_Pass_By_Copy, s_ASupLstLink);  -- rt_io_supervise.h:68

   type s_DSupLstLink is 
      record
	 NextP      : access sDSupLstLink;
	 NextTimerP : access sDSupLstLink;
	 SupP       : access pwr_baseclasses.pwr_sClass_DSup;
	 ValueP     : access pwr.pwr_tBoolean;
	 TimerP     : access rt_plc_timer.plc_sTimer;
      end record;
   pragma Convention (C_Pass_By_Copy, s_DSupLstLink);  -- rt_io_supervise.h:76

   
end Rt_Io_Supervise;
