
-- 
-- * Proview   Open Source Process Control.
-- * Copyright (C) 2005-2012 SSAB EMEA AB.
-- *
-- * This file is part of Proview.
-- *
-- * This program is free software; you can redistribute it and/or 
-- * modify it under the terms of the GNU General Public License as 
-- * published by the Free Software Foundation, either version 2 of 
-- * the License, or (at your option) any later version.
-- *
-- * This program is distributed in the hope that it will be useful 
-- * but WITHOUT ANY WARRANTY; without even the implied warranty of 
-- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
-- * GNU General Public License for more details.
-- *
-- * You should have received a copy of the GNU General Public License 
-- * along with Proview. If not, see <http://www.gnu.org/licenses/>
-- *
-- * Linking Proview statically or dynamically with other modules is
-- * making a combined work based on Proview. Thus, the terms and 
-- * conditions of the GNU General Public License cover the whole 
-- * combination.
-- *
-- * In addition, as a special exception, the copyright holders of
-- * Proview give you permission to, from the build function in the
-- * Proview Configurator, combine Proview with modules generated by the
-- * Proview PLC Editor to a PLC program, regardless of the license
-- * terms of these modules. You may copy and distribute the resulting
-- * combined work under the terms of your choice, provided that every 
-- * copy of the combined work is accompanied by a complete copy of 
-- * the source code of Proview (the version used to produce the 
-- * combined work), being distributed under the terms of the GNU 
-- * General Public License plus this exception.
--  
--   Ada binding by Jan de Kruijf (jan.de.kruyf@hotmail.com)
--

with Interfaces.C; use Interfaces.C;
with pwr;
with System;
with pwr_class;

with Interfaces.C.Strings;

package rt_gdh is
   
   type gdh_sObjRef      is 
      record
	 fullname : aliased pwr.pwr_tAName;  -- Name of object or parameter 
	 adrs     : System.Address;  -- Address of requested info 
	 bufsize  : aliased unsigned;  -- Requested buffer size 
      end record;
   -- gdh_RefObjectInfoList parameter structure.  
   pragma Convention (C_Pass_By_Copy, gdh_sObjRef);  -- rt_gdh.h:85
   
   type gdh_eLinkState is 
     (gdh_eLinkState_Down,  -- Down. No connection 
      gdh_eLinkState_Istrt, -- Start state I 
      gdh_eLinkState_Astrt, -- Start state A 
      gdh_eLinkState_Up);   -- Running. Now we're talking... 
			    --   Link states
   pragma Convention (C, gdh_eLinkState);  -- rt_gdh.h:97
   
   subtype gdh_sNodeInfo_nodename_array is Interfaces.C.char_array (0 .. 31);
   type gdh_sNodeInfo is 
      record
	 nodidx    : aliased pwr.pwr_tNodeId; 
	 -- Node index (!= qcom qix #)
	 nix       : aliased pwr.pwr_tUInt32;  
	 -- Network address
	 Nodename  : aliased gdh_sNodeInfo_nodename_array;  
	 -- Ascii name of node (nul-terminated)
	 -- zero-length means empty slot
	 objid     : aliased pwr.pwr_tObjid;  
	 -- Node object for this node
	 linkstate : aliased gdh_eLinkState;  
	 -- Nethandler down/istrt/astrt/up
	 upcnt     : aliased pwr.pwr_tUInt32;  
	 -- # of times up 
	 timeup    : aliased pwr.pwr_tTime;  
	 -- Most recent time link came up 
	 timedown  : aliased pwr.pwr_tTime;  
	 -- Most recent time link went down 
      end record;
   pragma Convention (C_Pass_By_Copy, gdh_sNodeInfo);  -- rt_gdh.h:115
   
   subtype gdh_sVolumeInfo_name_array is Interfaces.C.char_array (0 .. 31);
   type gdh_sVolumeInfo  is 
      record
	 isCached  : aliased pwr.pwr_tBoolean;  -- Volume is cached 
	 IsLoaded  : aliased pwr.pwr_tBoolean;  -- Volume is loaded 
	 isMounted : aliased pwr.pwr_tBoolean;  -- Volume is mounted 
	 time      : aliased pwr.pwr_tTime;  -- Version 
	 name      : aliased gdh_sVolumeInfo_name_array;  
	 -- Ascii name of volume (nul-terminated) 
	 cid       : aliased pwr.pwr_tCid;  -- Class of volume 
	 nid       : aliased pwr.pwr_tNid;  -- Node index 
      end record;
   -- Volume info
   pragma Convention (C_Pass_By_Copy, gdh_sVolumeInfo);  -- rt_gdh.h:130
   
   subtype gdh_mAttrDef is unsigned;
   -- Attribute flags
   gdh_mAttrDef_Shadowed : constant gdh_mAttrDef := 1; 
   -- Attribute is shadowed 
   gdh_mAttrDef_Super    : constant gdh_mAttrDef := 2; 
   -- Super class attribute
   -- rt_gdh.h:138
   
   type gdh_sAttrDef      is 
      record
	 attrName  : aliased pwr.pwr_tObjName;  -- Attribute name 
	 attrLevel : aliased unsigned_long;  -- Attribute level 
	 attrClass : aliased pwr_class.pwr_eClass;  -- Attribute class 
	 flags     : aliased unsigned_long;  -- Attribute flags 
	 attr      : access pwr_class.pwr_uParDef;  
	 -- Pointer to attribute object 
      end record;
   -- Attribute info
   pragma Convention (C_Pass_By_Copy, gdh_sAttrDef);  -- rt_gdh.h:151
   
   type gdh_sValueDef   is 
      record
	 Name  : aliased pwr.pwr_tObjName;  -- Value name 
	 Value : access pwr_class.pwr_sValue;  -- Pointer to value object 
      end record;
   --  Enum value info
   pragma Convention (C_Pass_By_Copy, gdh_sValueDef);  -- rt_gdh.h:161

   type gdh_sBitDef     is 
      record
	 Name : aliased pwr.pwr_tObjName;  -- Value name 
	 Bit  : access pwr_class.pwr_sBit;  -- Pointer to bit object 
      end record;
   --  Mask bit info
   pragma Convention (C_Pass_By_Copy, gdh_sBitDef);  -- rt_gdh.h:171
   
   -----------------
   --  Functions  --
   -----------------
   
   function gdh_ArefANameToAref (arp   : access pwr.pwr_sAttrRef;
				 aname : Interfaces.C.Strings.chars_ptr;
				 Oarp  : access pwr.pwr_sAttrRef) 
				return pwr.pwr_tStatus;  -- rt_gdh.h:185
   pragma Import (C, gdh_ArefANameToAref, "gdh_ArefANameToAref");

   function gdh_ArefDisabled (arp      : access pwr.pwr_sAttrRef; 
			      disabled : access pwr.pwr_tDisableAttr) 
			     return pwr.pwr_tStatus;  -- rt_gdh.h:192
   pragma Import (C, gdh_ArefDisabled, "gdh_ArefDisabled");

   function gdh_AttrArefToObjectAref (Arp  : access pwr.pwr_sAttrRef; 
				      oarp : access pwr.pwr_sAttrRef) 
				     return pwr.pwr_tStatus;  -- rt_gdh.h:198
   pragma Import (C, gdh_AttrArefToObjectAref, "gdh_AttrArefToObjectAref");

   function gdh_AttrrefToName (attributeReference : access pwr.pwr_sAttrRef;
			       nameBuffer     : Interfaces.C.Strings.chars_ptr;
			       sizeOfNameBuffer   : unsigned;
			       nameType           : pwr.pwr_tBitMask) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:204
   pragma Import (C, gdh_AttrrefToName, "gdh_AttrrefToName");

   function gdh_AttrRefToPointer (arp : access pwr.pwr_sAttrRef; 
				  p   : System.Address) 
				 return pwr.pwr_tStatus;  -- rt_gdh.h:212
   pragma Import (C, gdh_AttrRefToPointer, "gdh_AttrRefToPointer");

   function gdh_AttrStringToValue (type_id    : int;
				   value_str  : Interfaces.C.Strings.chars_ptr;
				   buffer_ptr : System.Address;
				   buff_size  : int;
				   attr_size  : int) 
				  return pwr.pwr_tStatus;  -- rt_gdh.h:218
   pragma Import (C, gdh_AttrStringToValue, "gdh_AttrStringToValue");

   function gdh_AttrValueToString (Type_Id   : pwr_class.pwr_eType;
				   tid       : pwr.pwr_tTid;
				   value_ptr : System.Address;
				   str       : Interfaces.C.Strings.chars_ptr;
				   size      : int;
				   len       : access int;
				   format    : Interfaces.C.Strings.chars_ptr) 
				  return pwr.pwr_tStatus;  -- rt_gdh.h:227
   pragma Import (C, gdh_AttrValueToString, "gdh_AttrValueToString");

   function gdh_ClassAttrrefToAttr (classid            : pwr.pwr_tClassId;
				    attributeReference : access pwr.pwr_sAttrRef;
				    nameBuffer    : Interfaces.C.Strings.chars_ptr;
				    sizeOfNameBuffer   : int) 
				   return pwr.pwr_tStatus;  -- rt_gdh.h:238
   pragma Import (C, gdh_ClassAttrrefToAttr, "gdh_ClassAttrrefToAttr");

   function gdh_ClassAttrToAttrref (classid       : pwr.pwr_tClassId;
				    attributeName : Interfaces.C.Strings.chars_ptr;
				    attributeReference : access pwr.pwr_sAttrRef) 
				   return pwr.pwr_tStatus;  -- rt_gdh.h:246
   pragma Import (C, gdh_ClassAttrToAttrref, "gdh_ClassAttrToAttrref");

   function gdh_ClassNameToId (className : Interfaces.C.Strings.chars_ptr; 
			       classid : access pwr.pwr_tClassId) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:253
   pragma Import (C, gdh_ClassNameToId, "gdh_ClassNameToId");

   function gdh_CreateObject (objectName       : Interfaces.C.Strings.chars_ptr;
			      classid          : pwr.pwr_tClassId;
			      sizeOfObjectData : unsigned;
			      objectId         : access pwr.pwr_tObjid;
			      internal1        : pwr.pwr_tObjid;
			      internal2        : pwr.pwr_tBitMask;
			      internal3        : pwr.pwr_tObjid) 
			     return pwr.pwr_tStatus;  -- rt_gdh.h:259
   pragma Import (C, gdh_CreateObject, "gdh_CreateObject");

   function gdh_DeleteObject (objectId : pwr.pwr_tObjid) 
			     return pwr.pwr_tStatus;  -- rt_gdh.h:270
   pragma Import (C, gdh_DeleteObject, "gdh_DeleteObject");

   function gdh_DLRefObjectInfoAttrref 
     (addressOfAttributeReference : access pwr.pwr_sAttrRef;
      objectData                  : System.Address;
      directLinkId                : access pwr.pwr_tDlid) 
     return pwr.pwr_tStatus;  -- rt_gdh.h:275
   pragma Import (C, gdh_DLRefObjectInfoAttrref, "gdh_DLRefObjectInfoAttrref");

   function gdh_DLUnrefObjectInfo (directLinkId : pwr.pwr_tDlid) 
				  return pwr.pwr_tStatus;  -- rt_gdh.h:282
   pragma Import (C, gdh_DLUnrefObjectInfo, "gdh_DLUnrefObjectInfo");

   procedure gdh_DLUnrefObjectInfoAll;  -- rt_gdh.h:287
   pragma Import (C, gdh_DLUnrefObjectInfoAll, "gdh_DLUnrefObjectInfoAll");

   function gdh_FReadObject (filename : Interfaces.C.Strings.chars_ptr; 
			     arp : access pwr.pwr_tAttrRef) 
			    return pwr.pwr_tStatus;  -- rt_gdh.h:290
   pragma Import (C, gdh_FReadObject, "gdh_FReadObject");

   function gdh_FWriteObject (filename : Interfaces.C.Strings.chars_ptr; 
			      arp : access pwr.pwr_tAttrRef) 
			     return pwr.pwr_tStatus;  -- rt_gdh.h:296
   pragma Import (C, gdh_FWriteObject, "gdh_FWriteObject");

   function gdh_GetAlarmInfo (object : pwr.pwr_tObjid;
			      alarmLevel         : access pwr.pwr_tUInt32;
			      maxAlarmLevel      : access pwr.pwr_tUInt32;
			      alarmBlockLevel    : access pwr.pwr_tUInt32;
			      maxAlarmBlockLevel : access pwr.pwr_tUInt32;
			      alarmVisibility    : access pwr.pwr_tUInt32) 
			     return pwr.pwr_tStatus;  -- rt_gdh.h:302
   pragma Import (C, gdh_GetAlarmInfo, "gdh_GetAlarmInfo");

   function gdh_GetAttributeCharAttrref
     (attributeReference : access pwr.pwr_sAttrRef;
      attributeType      : access pwr.pwr_tTypeId;
      attributeSize      : access unsigned;
      attributeOffset    : access unsigned;
      attributeDimension : access unsigned) 
     return pwr.pwr_tStatus;  -- rt_gdh.h:312
   pragma Import (C, gdh_GetAttributeCharAttrref, "gdh_GetAttributeCharAttrref");

   function gdh_GetAttributeFlags (Arp   : access pwr.pwr_sAttrRef; 
				   flags : access unsigned) 
				  return pwr.pwr_tStatus;  -- rt_gdh.h:321
   pragma Import (C, gdh_GetAttributeFlags, "gdh_GetAttributeFlags");

   function gdh_GetAttributeCharacteristics (name : Interfaces.C.Strings.chars_ptr;
					     Tid  : access pwr.pwr_tTypeId;
					     size : access pwr.pwr_tUInt32;
					     offs : access pwr.pwr_tUInt32;
					     elem : access pwr.pwr_tUInt32) 
					    return pwr.pwr_tStatus;-- rt_gdh.h:327
   pragma Import 
     (C, gdh_GetAttributeCharacteristics, "gdh_GetAttributeCharacteristics");

   function gdh_GetAttrRefTid (arp : access pwr.pwr_sAttrRef; 
			       tid : access pwr.pwr_tTid) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:336
   pragma Import (C, gdh_GetAttrRefTid, "gdh_GetAttrRefTid");

   function gdh_GetChild (object     : pwr.pwr_tObjid; 
			  firstChild : access pwr.pwr_tObjid) 
			 return pwr.pwr_tStatus;  -- rt_gdh.h:342
   pragma Import (C, gdh_GetChild, "gdh_GetChild");

   function gdh_GetClassList (classid : pwr.pwr_tClassId; 
			      Object  : access pwr.pwr_tObjid) 
			     return pwr.pwr_tStatus;  -- rt_gdh.h:348
   pragma Import (C, gdh_GetClassList, "gdh_GetClassList");

   function gdh_GetClassListAttrRef (cid : pwr.pwr_tClassId; 
				     arp : access pwr.pwr_sAttrRef) 
				    return pwr.pwr_tStatus;  -- rt_gdh.h:354
   pragma Import (C, gdh_GetClassListAttrRef, "gdh_GetClassListAttrRef");

   function gdh_GetDynamicAttrSize (Oid  : pwr.pwr_tObjid;
				    name : Interfaces.C.Strings.chars_ptr;
				    size : access pwr.pwr_tUInt32) 
				   return pwr.pwr_tStatus;  -- rt_gdh.h:360
   pragma Import (C, gdh_GetDynamicAttrSize, "gdh_GetDynamicAttrSize");

   function gdh_GetEnumValueDef (Tid  : pwr.pwr_tTid;
				 Vd   : System.Address;
				 rows : access int) 
				return pwr.pwr_tStatus;  -- rt_gdh.h:367
   pragma Import (C, gdh_GetEnumValueDef, "gdh_GetEnumValueDef");

   function gdh_GetLocalParent (object : pwr.pwr_tObjid; 
				parent : access pwr.pwr_tObjid) 
			       return pwr.pwr_tStatus;  -- rt_gdh.h:374
   pragma Import (C, gdh_GetLocalParent, "gdh_GetLocalParent");

   function gdh_GetMaskBitDef (Tid  : pwr.pwr_tTid;
			       bd   : System.Address;
			       rows : access int) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:380
   pragma Import (C, gdh_GetMaskBitDef, "gdh_GetMaskBitDef");

   function gdh_GetNextAttrRef (cid     : pwr.pwr_tClassId;
				arp     : access pwr.pwr_sAttrRef;
				new_arp : access pwr.pwr_sAttrRef) 
			       return pwr.pwr_tStatus;  -- rt_gdh.h:387
   pragma Import (C, gdh_GetNextAttrRef, "gdh_GetNextAttrRef");

   function gdh_GetNextObject (object     : pwr.pwr_tObjid; 
			       nextObject : access pwr.pwr_tObjid) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:394
   pragma Import (C, gdh_GetNextObject, "gdh_GetNextObject");

   function gdh_GetNextObjectAttrRef (Cid     : pwr.pwr_tClassId;
				      --  The class identity. 
				      arp     : access pwr.pwr_sAttrRef;
				      --  The attribute reference.
				      new_arp : access pwr.pwr_sAttrRef)
                                      --  Receives the attribute reference
				     return pwr.pwr_tStatus;  -- rt_gdh.h:401
   pragma Import (C, gdh_GetNextObjectAttrRef, "gdh_GetNextObjectAttrRef");

   function gdh_GetNextSibling (Object      : pwr.pwr_tObjid; 
				nextSibling : access pwr.pwr_tObjid) 
			       return pwr.pwr_tStatus;  -- rt_gdh.h:408
   pragma Import (C, gdh_GetNextSibling, "gdh_GetNextSibling");

   function gdh_GetNextVolume (pvid : pwr.pwr_tVid; 
			       vid  : access pwr.pwr_tVid) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:414
   pragma Import (C, gdh_GetNextVolume, "gdh_GetNextVolume");

   function gdh_GetNodeIndex (nodeIndex : access pwr.pwr_tNodeId) 
			     return pwr.pwr_tStatus;  -- rt_gdh.h:420
   pragma Import (C, gdh_GetNodeIndex, "gdh_GetNodeIndex");

   function gdh_GetNodeInfo (nodidx : pwr.pwr_tNodeId; 
			     Ip     : access gdh_sNodeInfo) 
			    return pwr.pwr_tStatus;  -- rt_gdh.h:425
   pragma Import (C, gdh_GetNodeInfo, "gdh_GetNodeInfo");

   function gdh_GetNodeObject (nodeIndex : pwr.pwr_tNodeId; 
			       object    : access pwr.pwr_tObjid) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:431
   pragma Import (C, gdh_GetNodeObject, "gdh_GetNodeObject");

   function gdh_GetObjectClass (Object  : pwr.pwr_tObjid; 
				classid : access pwr.pwr_tClassId) 
			       return pwr.pwr_tStatus;  -- rt_gdh.h:437
   pragma Import (C, gdh_GetObjectClass, "gdh_GetObjectClass");

   function gdh_GetObjectClassList (cid : pwr.pwr_tCid; 
				    -- The class identity.  
				    oid : pwr.pwr_tOid; 
				    -- Host object. 
				    arp : access pwr.pwr_sAttrRef) 
                                    -- Receives the attribute reference.
				   return pwr.pwr_tStatus;  -- rt_gdh.h:443
   pragma Import (C, gdh_GetObjectClassList, "gdh_GetObjectClassList");

   function gdh_GetObjectDLCount (object : pwr.pwr_tObjid; 
				  Count  : access pwr.pwr_tUInt32) 
				 return pwr.pwr_tStatus;  -- rt_gdh.h:450
   pragma Import (C, gdh_GetObjectDLCount, "gdh_GetObjectDLCount");

   function gdh_GetObjectInfo (name    : Interfaces.C.Strings.chars_ptr;
			       bufp    : pwr.pwr_tAddress;
			       bufsize : pwr.pwr_tUInt32) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:456
   pragma Import (C, gdh_GetObjectInfo, "gdh_GetObjectInfo");

   function gdh_GetObjectInfoAttrref (attributeReference : access pwr.pwr_sAttrRef;
				      buffer             : System.Address;
				      SizeOfBuffer       : unsigned) 
				     return pwr.pwr_tStatus;  -- rt_gdh.h:463
   pragma Import (C, gdh_GetObjectInfoAttrref, "gdh_GetObjectInfoAttrref");

   function gdh_GetObjectLocation (object  : pwr.pwr_tObjid; 
				   isLocal : access pwr.pwr_tBoolean) 
				  return pwr.pwr_tStatus;  -- rt_gdh.h:470
   pragma Import (C, gdh_GetObjectLocation, "gdh_GetObjectLocation");

   function gdh_GetObjectNodeIndex (Object    : pwr.pwr_tObjid; 
				    nodeIndex : access pwr.pwr_tNodeId) 
				   return pwr.pwr_tStatus;  -- rt_gdh.h:476
   pragma Import (C, gdh_GetObjectNodeIndex, "gdh_GetObjectNodeIndex");

   function gdh_GetObjectSize (Oid  : pwr.pwr_tObjid; 
			       size : access pwr.pwr_tUInt32) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:482
   pragma Import (C, gdh_GetObjectSize, "gdh_GetObjectSize");

   function gdh_GetParent (object : pwr.pwr_tObjid; 
			   parent : access pwr.pwr_tObjid) 
			  return pwr.pwr_tStatus;  -- rt_gdh.h:488
   pragma Import (C, gdh_GetParent, "gdh_GetParent");

   function gdh_GetPreviousObject (Object         : pwr.pwr_tObjid; 
				   previousObject : access pwr.pwr_tObjid) 
				  return pwr.pwr_tStatus;  -- rt_gdh.h:494
   pragma Import (C, gdh_GetPreviousObject, "gdh_GetPreviousObject");

   function gdh_GetPreviousSibling (Object          : pwr.pwr_tObjid; 
				    previousSibling : access pwr.pwr_tObjid) 
				   return pwr.pwr_tStatus;  -- rt_gdh.h:500
   pragma Import (C, gdh_GetPreviousSibling, "gdh_GetPreviousSibling");

   function gdh_GetRootList (object : access pwr.pwr_tObjid) 
			    return pwr.pwr_tStatus;  -- rt_gdh.h:506
   pragma Import (C, gdh_GetRootList, "gdh_GetRootList");

   function gdh_GetSecurityInfo (security : access pwr_class.pwr_sSecurity) 
				return pwr.pwr_tStatus;  -- rt_gdh.h:511
   pragma Import (C, gdh_GetSecurityInfo, "gdh_GetSecurityInfo");

   function gdh_GetVolumeInfo (Vid  : pwr.pwr_tVid; 
			       info : access gdh_sVolumeInfo) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:516
   pragma Import (C, gdh_GetVolumeInfo, "gdh_GetVolumeInfo");

   function gdh_GetVolumeList (vid : access pwr.pwr_tVid) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:522
   pragma Import (C, gdh_GetVolumeList, "gdh_GetVolumeList");

   function gdh_GetRootVolume (vid : access pwr.pwr_tVid) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:527
   pragma Import (C, gdh_GetRootVolume, "gdh_GetRootVolume");

   function gdh_GetSubscriptionOldness (Subid      : pwr.pwr_tSubid;
					IsOld      : access pwr.pwr_tBoolean;
					lastUpdate : access pwr.pwr_tTime;
					lastStatus : access pwr.pwr_tStatus) 
				       return pwr.pwr_tStatus;  -- rt_gdh.h:541
   pragma Import (C, gdh_GetSubscriptionOldness, "gdh_GetSubscriptionOldness");

   function gdh_GetSuperClass (Cid      : pwr.pwr_tCid;
			       supercid : access pwr.pwr_tCid;
			       Oid      : pwr.pwr_tObjid) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:549
   pragma Import (C, gdh_GetSuperClass, "gdh_GetSuperClass");

   function gdh_Init (name : Interfaces.C.Strings.chars_ptr) 
		     return pwr.pwr_tStatus;  -- rt_gdh.h:555
   pragma Import (C, gdh_Init, "gdh_Init");

   function gdh_MountObjidToPointer (Object     : pwr.pwr_tObjid; 
				     objectData : System.Address) 
				    return pwr.pwr_tStatus;  -- rt_gdh.h:560
   pragma Import (C, gdh_MountObjidToPointer, "gdh_MountObjidToPointer");

   function gdh_MoveObject (objectId    : pwr.pwr_tObjid; 
			    newParentId : pwr.pwr_tObjid) 
			   return pwr.pwr_tStatus;  -- rt_gdh.h:566
   pragma Import (C, gdh_MoveObject, "gdh_MoveObject");

   function gdh_NameToAttrref (Parent             : pwr.pwr_tObjid;
			       attributeName      : Interfaces.C.Strings.chars_ptr;
			       attributeReference : access pwr.pwr_sAttrRef) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:572
   pragma Import (C, gdh_NameToAttrref, "gdh_NameToAttrref");

   function gdh_NameToObjid (objectName : Interfaces.C.Strings.chars_ptr; 
			     Objid      : access pwr.pwr_tObjid) 
			    return pwr.pwr_tStatus;  -- rt_gdh.h:579
   pragma Import (C, gdh_NameToObjid, "gdh_NameToObjid");

   function gdh_NameToPointer (objectName : Interfaces.C.Strings.chars_ptr; 
			       objectData : System.Address) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:585
   pragma Import (C, gdh_NameToPointer, "gdh_NameToPointer");

   function gdh_NethandlerRunning 
     return pwr.pwr_tStatus;  -- rt_gdh.h:591
   pragma Import (C, gdh_NethandlerRunning, "gdh_NethandlerRunning");

   function gdh_ObjidToName (oid      : pwr.pwr_tObjid;
			     Namebuf  : Interfaces.C.Strings.chars_ptr;
			     size     : pwr.pwr_tUInt32;
			     nametype : pwr.pwr_tBitMask) 
			    return pwr.pwr_tStatus;  -- rt_gdh.h:594
   pragma Import (C, gdh_ObjidToName, "gdh_ObjidToName");

   function gdh_ObjidToPointer (Object     : pwr.pwr_tObjid; 
				objectData : System.Address) 
			       return pwr.pwr_tStatus;  -- rt_gdh.h:602
   pragma Import (C, gdh_ObjidToPointer, "gdh_ObjidToPointer");

   function gdh_RefObjectInfo (attributeName    : Interfaces.C.Strings.chars_ptr;
			       objectData       : System.Address;
			       Subid            : access pwr.pwr_tSubid;
			       sizeOfObjectData : unsigned) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:608
   pragma Import (C, gdh_RefObjectInfo, "gdh_RefObjectInfo");

   function gdh_RefObjectInfoList (NEntry          : unsigned;
				   objectReference : access gdh_sObjRef;
				   Subid           : access pwr.pwr_tSubid) 
				  return pwr.pwr_tStatus;  -- rt_gdh.h:616
   pragma Import (C, gdh_RefObjectInfoList, "gdh_RefObjectInfoList");

   function gdh_RenameObject (objectId      : pwr.pwr_tObjid; 
			      newObjectName : Interfaces.C.Strings.chars_ptr) 
			     return pwr.pwr_tStatus;  -- rt_gdh.h:623
   pragma Import (C, gdh_RenameObject, "gdh_RenameObject");

   function gdh_SetAlarmBlockLevel (object          : pwr.pwr_tObjid; 
				    alarmBlockLevel : pwr.pwr_tUInt32) 
				   return pwr.pwr_tStatus;  -- rt_gdh.h:629
   pragma Import (C, gdh_SetAlarmBlockLevel, "gdh_SetAlarmBlockLevel");

   function gdh_SetAlarmLevel (Object     : pwr.pwr_tObjid; 
			       alarmLevel : pwr.pwr_tUInt32) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:635
   pragma Import (C, gdh_SetAlarmLevel, "gdh_SetAlarmLevel");

   function gdh_SetObjectInfo (attributeName : Interfaces.C.Strings.chars_ptr;
			       buffer        : System.Address;
			       sizeOfBuffer  : unsigned) 
			      return pwr.pwr_tStatus;  -- rt_gdh.h:641
   pragma Import (C, gdh_SetObjectInfo, "gdh_SetObjectInfo");

   function gdh_SetObjectInfoAttrref (attributeReference : access pwr.pwr_sAttrRef;
				      buffer             : System.Address;
				      SizeOfBuffer       : unsigned) 
				     return pwr.pwr_tStatus;  -- rt_gdh.h:648
   pragma Import (C, gdh_SetObjectInfoAttrref, "gdh_SetObjectInfoAttrref");

   function gdh_SubAssociateBuffer (Subid        : pwr.pwr_tSubid;
				    Buffer       : System.Address;
				    sizeOfBuffer : unsigned) 
				   return pwr.pwr_tStatus;  -- rt_gdh.h:655
   pragma Import (C, gdh_SubAssociateBuffer, "gdh_SubAssociateBuffer");

   function gdh_SubData (subid        : pwr.pwr_tSubid;
			 buffer       : System.Address;
			 sizeOfBuffer : unsigned) 
			return pwr.pwr_tStatus;  -- rt_gdh.h:662
   pragma Import (C, gdh_SubData, "gdh_SubData");

   function gdh_SubRefObjectInfoAttrref 
     (attributeReference : access pwr.pwr_sAttrRef; 
      Subid              : access pwr.pwr_tSubid) 
     return pwr.pwr_tStatus;  -- rt_gdh.h:669
   pragma Import (C, gdh_SubRefObjectInfoAttrref, "gdh_SubRefObjectInfoAttrref");

   function gdh_SubRefObjectInfoList (entryCount : unsigned;
				      Object     : System.Address;
				      IsAttrref  : access pwr.pwr_tBoolean;
				      subid      : access pwr.pwr_tSubid) 
				     return pwr.pwr_tStatus;  -- rt_gdh.h:675
   pragma Import (C, gdh_SubRefObjectInfoList, "gdh_SubRefObjectInfoList");

   function gdh_SubRefObjectInfoName 
     (attributeName : Interfaces.C.Strings.chars_ptr; 
      Subid         : access pwr.pwr_tSubid) 
     return pwr.pwr_tStatus;  -- rt_gdh.h:683
   pragma Import (C, gdh_SubRefObjectInfoName, "gdh_SubRefObjectInfoName");

   function gdh_SubSize (subid : pwr.pwr_tSubid; 
			 Size  : access unsigned) 
			return pwr.pwr_tStatus;  -- rt_gdh.h:689
   pragma Import (C, gdh_SubSize, "gdh_SubSize");

   function gdh_SetSubscriptionDefaults (defaultUpdateTime : pwr.pwr_tInt32; 
					 DefaultTimeOut    : pwr.pwr_tInt32) 
					return pwr.pwr_tStatus;  -- rt_gdh.h:695
   pragma Import (C, gdh_SetSubscriptionDefaults, "gdh_SetSubscriptionDefaults");
   
   function gdh_SubUnrefObjectInfo (subid : pwr.pwr_tSubid) 
				   return pwr.pwr_tStatus;  -- rt_gdh.h:701
   pragma Import (C, gdh_SubUnrefObjectInfo, "gdh_SubUnrefObjectInfo");

   procedure gdh_SubUnrefObjectInfoAll;  -- rt_gdh.h:706
   pragma Import (C, gdh_SubUnrefObjectInfoAll, "gdh_SubUnrefObjectInfoAll");

   function gdh_SubUnrefObjectInfoList (nEntry : unsigned; 
					Subid  : access pwr.pwr_tSubid) 
				       return pwr.pwr_tStatus;  -- rt_gdh.h:709
   pragma Import (C, gdh_SubUnrefObjectInfoList, "gdh_SubUnrefObjectInfoList");

   function gdh_UnrefObjectInfo (subid : pwr.pwr_tSubid) 
				return pwr.pwr_tStatus;  -- rt_gdh.h:715
   pragma Import (C, gdh_UnrefObjectInfo, "gdh_UnrefObjectInfo");

   function gdh_UnrefObjectInfoAll 
     return pwr.pwr_tStatus;  -- rt_gdh.h:720
   pragma Import (C, gdh_UnrefObjectInfoAll, "gdh_UnrefObjectInfoAll");

   function gdh_VolumeIdToName (Vid  : pwr.pwr_tVid;
				name : Interfaces.C.Strings.chars_ptr;
				size : int) 
			       return pwr.pwr_tStatus;  -- rt_gdh.h:723
   pragma Import (C, gdh_VolumeIdToName, "gdh_VolumeIdToName");
   
   procedure gdh_StoreRtdbPointer (rtdbReference  : access unsigned_long; 
				   virtualAddress : System.Address); -- rt_gdh.h:767
   pragma Import (C, gdh_StoreRtdbPointer, "gdh_StoreRtdbPointer");

   function gdh_TranslateRtdbPointer (rtdbReference : unsigned_long) 
				     return System.Address;  -- rt_gdh.h:773
   pragma Import (C, gdh_TranslateRtdbPointer, "gdh_TranslateRtdbPointer");

  
end Rt_Gdh;
