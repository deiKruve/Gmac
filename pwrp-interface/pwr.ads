-- 
-- * Proview   Open Source Process Control.
-- * Copyright (C) 2005-2014 SSAB EMEA AB.
-- *
-- * This file is part of Proview.
-- *
-- * This program is free software; you can redistribute it and/or 
-- * modify it under the terms of the GNU General Public License as 
-- * published by the Free Software Foundation, either version 2 of 
-- * the License, or (at your option) any later version.
-- *
-- * This program is distributed in the hope that it will be useful 
-- * but WITHOUT ANY WARRANTY; without even the implied warranty of 
-- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
-- * GNU General Public License for more details.
-- *
-- * You should have received a copy of the GNU General Public License 
-- * along with Proview. If not, see <http://www.gnu.org/licenses/>
-- *
-- * Linking Proview statically or dynamically with other modules is
-- * making a combined work based on Proview. Thus, the terms and 
-- * conditions of the GNU General Public License cover the whole 
-- * combination.
-- *
-- * In addition, as a special exception, the copyright holders of
-- * Proview give you permission to, from the build function in the
-- * Proview Configurator, combine Proview with modules generated by the
-- * Proview PLC Editor to a PLC program, regardless of the license
-- * terms of these modules. You may copy and distribute the resulting
-- * combined work under the terms of your choice, provided that every 
-- * copy of the combined work is accompanied by a complete copy of 
-- * the source code of Proview (the version used to produce the 
-- * combined work), being distributed under the terms of the GNU 
-- * General Public License plus this exception.
--  
--   Ada binding by Jan de Kruijf (jan.de.kruyf@hotmail.com)
--

pragma Ada_2005;
pragma Style_Checks (Off);

with Interfaces.C; use Interfaces.C;
with System;
with Interfaces.C.Extensions;

package Pwr is
   -- /* PROVIEW/R types  */
   pwr_cSizObjName    : constant := 31;  --  pwr.h:132
   pwr_cSizPgmName    : constant := 31;  --  pwr.h:133
   pwr_cSizStructName : constant := 31;  --  pwr.h:134
   pwr_cSizGraphName  : constant := 15;  --  pwr.h:135
   pwr_cSizXRef       : constant := 31;  --  pwr.h:136
   Pwr_CSizAttrName   : constant := 31;  --  pwr.h:137
   Pwr_CSizPathName   : constant := 63;  --  pwr.h:138
   Pwr_CSizFullName   : constant := 199;  --  pwr.h:139
   Pwr_CSizOName      : constant := 199;  --  pwr.h:140
   Pwr_CSizAName      : constant := 399;  --  pwr.h:141
   Pwr_CSizFileName   : constant := 255;  --  pwr.h:142
   Pwr_CSizCmd        : constant := 255;  --  pwr.h:143
   
   -- pwr.h:145
   type pwr_tAddress       is new System.Address;
   -- Generic pointer type.
   subtype pwr_tBit        is unsigned;
   -- Bit type.
   subtype pwr_tBitMask    is unsigned;
   -- Bitmask type.
   subtype Pwr_TBoolean    is unsigned;
   -- Boolean type.
   subtype pwr_tFloat32    is float;
   -- 32-bit float.
   subtype pwr_tFloat64    is double;
   -- 64-big float.
   subtype pwr_tChar       is char;
   -- Character type.
   subtype Pwr_TString     is Interfaces.C.char_array (size_t);
   -- String type.
   subtype pwr_tText       is Interfaces.C.char_array (size_t); 
   -- Text type.
   
   -- pwr.h:175
   subtype pwr_tInt8       is char;
   -- 8-bit integer type.
   subtype pwr_tInt16      is short;
   -- 16-bit integer type.
   subtype pwr_tInt32      is int;
   -- 32-bit integer type.
   type uu_pwr_tInt64      is 
      record
	 Low  : aliased unsigned;  -- pwr.h:191
	 high : aliased int;  -- pwr.h:192
      end record;
   pragma Convention (C_Pass_By_Copy, uu_pwr_tInt64);  -- pwr.h:193
   
   subtype pwr_tInt64      is uu_pwr_tInt64;
   -- 64-bit integer type.
   
   type uu_pwr_tUInt64     is 
      record
	 Low  : aliased unsigned;
	 high : aliased unsigned;
      end record;
   pragma Convention (C_Pass_By_Copy, uu_pwr_tUInt64);  -- pwr.h:211
   
   subtype Pwr_TUInt64     is uu_pwr_tUInt64;
   -- 64-bit unsigned integer type.
   
   -- pwr.h:225
   subtype pwr_tUInt8      is unsigned_char;
   -- 8-bit unsigned integer type.
   subtype Pwr_TUInt16     is unsigned_short;
   -- 16-bit unsigned integer type.
   subtype Pwr_TUInt32     is unsigned;
   -- 32-bit unsigned integer type.
   subtype Pwr_TVid        is unsigned;
   -- Volume identity type.
   subtype Pwr_TVolumeId   is pwr_tVid;
   -- Volume identity type.
   subtype Pwr_TAix        is unsigned;
   -- Attribute index type.
   
    -- pwr.h:243
   subtype Pwr_TOix        is unsigned;
   -- Object index type.
   subtype Pwr_TObjectIx   is pwr_tOix; 
   -- Object index type.
   subtype Pwr_TMask       is pwr_tUInt32; 
   -- Mask type.
   subtype Pwr_TEnum       is pwr_tInt32; 
   -- Enumeration type.
   subtype pwr_tVoid is System.Address; 
   -- Void type.
   
   type pwr_tOid           is
      record
	 oix : aliased pwr_tOix;
	 vid : aliased pwr_tVid;
      end record;
   pragma Convention (C_Pass_By_Copy, pwr_tOid);  -- pwr.h:266
   
   subtype Pwr_TObjid      is pwr_tOid;
   -- Object identity type.
   
   subtype Pwr_TObjDId     is pwr_tOid;
   -- Object identity type.
   
   subtype Pwr_TCid        is unsigned; 
   -- Class identity type.
   subtype Pwr_TClassId    is pwr_tCid;
   -- Class identity type.
   subtype Pwr_TTid        is unsigned; 
   -- Type identity type.
   subtype Pwr_TTypeId     is pwr_tTid;
   -- Type identity type.
   subtype Pwr_TStatus     is int; 
   -- Status type.
   
   -- pwr.h:288
   subtype Pwr_TNetStatus  is int;
				   -- Network status type.
   subtype pwr_tGeneration is unsigned;

   subtype Pwr_TBid        is unsigned;

   subtype Pwr_TVersion    is unsigned;

   subtype pwr_tPwrVersion is unsigned; 

   subtype pwr_tProjVersion is unsigned;

   subtype Pwr_TUserId     is unsigned;

   subtype Pwr_TDbId       is unsigned;
   
   -- pwr.h:297
   subtype Pwr_TNid        is pwr_tVolumeId;
   -- Node identity type.
   subtype Pwr_TNodeId     is pwr_tNid; 
   -- Node identity type.
   subtype Pwr_TNodeIndex  is pwr_tNid;
   -- Node index type.
   subtype Pwr_TSid        is unsigned;
   -- Server identity type.
   
   type Pwr_TRid           is 
      record
	 rix : aliased pwr_tUInt32;
	 nid : aliased pwr_tNid;
      end record;
   pragma Convention (C_Pass_By_Copy, pwr_tRid);  -- pwr.h:308
   
   subtype Pwr_TRefId      is pwr_tRid;
   -- Reference identity type.
   subtype Pwr_TDlid       is pwr_tRid;
   -- Direct link identity type.
   subtype Pwr_TSubid      is pwr_tRid;
   -- Subscription identity type.
   
   subtype Pwr_EBix        is unsigned;
   -- Body index enumeration.
   pwr_eBix_u_u             : constant pwr_eBix := 0;
   Pwr_EBix_Sys             : constant pwr_eBix := 1;
   Pwr_EBix_Rt              : constant pwr_eBix := 1;
   Pwr_EBix_Dev             : constant pwr_eBix := 2;
   Pwr_EBix_Template        : constant pwr_eBix := 7;
   Pwr_EBix_U               : constant pwr_eBix := 8;  -- pwr.h:326
   
   type pwr_uPwrVersion;
   -- Proview version type
   type anon_7             is 
      record
	 Char   : aliased pwr_tChar;  -- pwr.h:341
	 Major  : aliased pwr_tUInt8;  -- pwr.h:342
	 Minor  : aliased pwr_tUInt8;  -- pwr.h:343
	 Update : aliased pwr_tUInt8;  -- pwr.h:344
      end record;
   pragma Convention (C_Pass_By_Copy, anon_7);
   
   type pwr_uPwrVersion (discr : unsigned := 0) is 
      record
	 case discr is
	    when 0      =>
	       i : aliased pwr_tPwrVersion;  -- pwr.h:336
	    when others =>
	       s : aliased anon_7;  -- pwr.h:354
	 end case;
      end record;
   pragma Convention (C_Pass_By_Copy, pwr_uPwrVersion);
   
   pragma Unchecked_Union (pwr_uPwrVersion);  -- pwr.h:355
					      -- Proview version
   
   type pwr_tTime          is 
      record
	 Tv_Sec  : aliased pwr_tInt64;
	 tv_nsec : aliased pwr_tInt64;
      end record;
   -- Abolute time type.
   pragma Convention (C_Pass_By_Copy, pwr_tTime);  -- pwr.h:372
   
   type pwr_tDeltaTime     is 
      record
	 Tv_Sec  : aliased pwr_tInt64;  -- pwr.h:379
	 tv_nsec : aliased pwr_tInt64;  -- pwr.h:380
      end record;
   -- Delta time type.
   pragma Convention (C_Pass_By_Copy, pwr_tDeltaTime);  -- pwr.h:381
   
   -- pwr.h:386
   subtype pwr_tObjName     is Interfaces.C.char_array (0 .. 31);  
   -- Object name type.
   subtype Pwr_TPgmName     is Interfaces.C.char_array (0 .. 31);
   -- PgmName type.
   subtype Pwr_TXRef        is Interfaces.C.char_array (0 .. 31);
   -- XRef type.
   subtype Pwr_TGraphName   is Interfaces.C.char_array (0 .. 15);
   -- GraphName type.
   subtype Pwr_TStructName  is Interfaces.C.char_array (0 .. 31);
   -- StructName type.
   subtype pwr_tAttrName    is Interfaces.C.char_array (0 .. 31);
   -- AttrName type.
   subtype pwr_tPathName    is Interfaces.C.char_array (0 .. 63);
   -- PathName type.
   subtype pwr_tFullName    is Interfaces.C.char_array (0 .. 199);
   -- FullName type.
   subtype pwr_tOName       is Interfaces.C.char_array (0 .. 199);
   -- Full Object Name type.
   
   -- pwr.h:406
   subtype pwr_tAName       is Interfaces.C.char_array (0 .. 399);  
   -- Full Aref Name type.
   subtype Pwr_TFileName    is Interfaces.C.char_array (0 .. 255);
   --  FileName type.
   subtype Pwr_TCmd         is Interfaces.C.char_array (0 .. 255); 
   -- Command string type.
   subtype Pwr_TString256   is Interfaces.C.char_array (0 .. 255);
   --  256 byte string type.
   subtype pwr_tString132   is Interfaces.C.char_array (0 .. 131); 
   -- 132 byte string type.
   subtype Pwr_TString80    is Interfaces.C.char_array (0 .. 79);
   -- 80 byte string type.
   subtype Pwr_TString40    is Interfaces.C.char_array (0 .. 39);
   -- 40 byte string type.
   subtype pwr_tString32    is Interfaces.C.char_array (0 .. 31);
   -- 32 byte string type.
   
   -- pwr.h:433
   subtype Pwr_TString16    is Interfaces.C.char_array (0 .. 15);
   -- 16 byte string type.
   subtype Pwr_TString8     is Interfaces.C.char_array (0 .. 7);
   -- 8 byte string type.
   subtype Pwr_TString1     is Interfaces.C.char_array (0 .. 0);
   -- 1 byte string type.
   subtype pwr_tProString40 is Interfaces.C.char_array (0 .. 39);
   -- 40 byte protected string type.
   subtype pwr_tText256     is Interfaces.C.char_array (0 .. 255);
   -- 256 byte text type.
   subtype Pwr_TText1024    is Interfaces.C.char_array (0 .. 1023);
   -- 1024 byte text type.
   subtype Pwr_TText8192    is Interfaces.C.char_array (0 .. 8191);
   -- 8192 byte text type.
   
   -- pwr.h:457
   subtype Pwr_TURL         is Interfaces.C.char_array (0 .. 159);
   -- URL type.
   subtype Pwr_TCastId      is pwr_tTypeId;
   -- CastId type.
   subtype pwr_tDisableAttr is unsigned;
   -- DisableAttr type.
   subtype pwr_tEmergBreakSelectEnum is pwr_tEnum;
   -- Node attribute enum.
   subtype Pwr_TOpSysEnum   is pwr_tEnum;
   -- Operating system enum.
   subtype Pwr_TOpSysMask   is pwr_tMask;
   -- Operating system Mask.
   
   type pwr_mAttrRef;
   -- Attribute reference flags type.
   type anon_11             is 
      record
	 Indirect    : Extensions.Unsigned_1;  -- pwr.h:493
	 Object      : Extensions.Unsigned_1;
	 ObjectAttr  : Extensions.Unsigned_1;
	 c_Array     : Extensions.Unsigned_1; 
	 Shadowed    : Extensions.Unsigned_1; 
	 CastAttr    : Extensions.Unsigned_1; 
	 DisableAttr : Extensions.Unsigned_1; 
	 Fill        : Extensions.Unsigned_25;  -- pwr.h:501
      end record;
   pragma Convention (C_Pass_By_Copy, anon_11);
   type pwr_mAttrRef (discr : unsigned := 0) is 
      record
	 case discr is
	    when 0      =>
	       m : aliased pwr_tBitMask;  -- pwr.h:488
	    when others =>
	       b : aliased anon_11;  -- pwr.h:516
	 end case;
      end record;
   pragma Convention (C_Pass_By_Copy, pwr_mAttrRef);
   pragma Unchecked_Union (pwr_mAttrRef);  -- pwr.h:526
   -- Attribute reference flags type.
   
   type pwr_sAttrRef       is 
      record
	 Objid  : aliased pwr_tOid;     -- Object identity.
	 c_Body : aliased pwr_tCid;     -- Typeid of attribute, body or class.
	 Offset : aliased pwr_tUInt32;  -- Offset in body.
	 Size   : aliased pwr_tUInt32;  -- Attribute size.
	 Flags  : pwr_mAttrRef;         -- Attribute flags. 
      end record;
   
   pragma Convention (C_Pass_By_Copy, pwr_sAttrRef);  -- pwr.h:538
   -- Attribute reference.
   subtype pwr_tAttrRef is pwr_sAttrRef;
   
   
   type pwr_tDataRef       is 
      record
	 Ptr  : System.Address;        -- Private plc pointer to data object.
	 Aref : aliased pwr_sAttrRef;  -- Attribute reference to data object.
      end record;
   pragma Convention (C_Pass_By_Copy, pwr_tDataRef);  -- pwr.h:548
   
   
end Pwr;
